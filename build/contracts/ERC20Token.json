{
  "contractName": "ERC20Token",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_tokenPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "AddedToBlackList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ERC20Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "EthersWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "RemovedFromBlackList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "blackList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "tokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "account",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amount",
          "type": "uint256[]"
        }
      ],
      "name": "airDrop",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "blackListAddress",
          "type": "address"
        }
      ],
      "name": "addToBlackList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "blackListAddress",
          "type": "address"
        }
      ],
      "name": "removeFromBlackList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newTokenPrice",
          "type": "uint256"
        }
      ],
      "name": "updateTokenPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedToBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"EthersWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedFromBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"blackListAddress\",\"type\":\"address\"}],\"name\":\"addToBlackList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"account\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amount\",\"type\":\"uint256[]\"}],\"name\":\"airDrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blackList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"blackListAddress\",\"type\":\"address\"}],\"name\":\"removeFromBlackList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTokenPrice\",\"type\":\"uint256\"}],\"name\":\"updateTokenPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addToBlackList(address)\":{\"details\":\"This function would add an address to the blacklist mappingOnly the owner can call this function\",\"params\":{\"blackListAddress\":\"The account to be added to blacklist\"}},\"airDrop(address[],uint256[])\":{\"details\":\"This is the airDrop function. It is used by the owner to airdrop `amount` number of ERC20 tokens to the `account` address respectively.Only the owner can call this function\",\"params\":{\"account\":\"The addresses to be airdropped\",\"amount\":\"The amounts of random tokens to be air dropped respectively\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"custom:info\":\"The default value of {decimals} is 18name and symbol values are immutable: they can only be set once during construction\",\"details\":\"Sets the values for {name}, {symbol} and {_tokenPrice}\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getContractBalance()\":{\"details\":\"Returns the contract balance\",\"returns\":{\"balance\":\"Contract balance in wei\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"This is the mint function. It is used for minting `amount` ERC20 tokens to the `to` addressOnly non-blacklisted user can call this function\",\"params\":{\"amount\":\"Number of the ERC20 tokens to be minted\",\"to\":\"The address to be token minted\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"to pause the contract.Only the owner can call this function.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeFromBlackList(address)\":{\"details\":\"This function would remove an address from the blacklist mapping.Only the owner can call this function.\",\"params\":{\"blackListAddress\":\"The account to be removed from blacklist.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"to unpause the contract.Only the owner can call this function.\"},\"updateTokenPrice(uint256)\":{\"details\":\"Returns the contract balance.Only the owner can call this function.\",\"params\":{\"newTokenPrice\":\"is updated token price in wei\"}},\"withdraw()\":{\"details\":\"This function would withdraw all the contract balance into owner's addressOnly the owner can call this function\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addToBlackList(address)\":{\"notice\":\"addToBlackList is use to add the address into blacklist\"},\"airDrop(address[],uint256[])\":{\"notice\":\"airDrop is use to put the ERC20 tokens to given addresses\"},\"getContractBalance()\":{\"notice\":\"getContractBalance is use to check contract balance\"},\"removeFromBlackList(address)\":{\"notice\":\"removeFromBlackList is use to remove the blacklisted user.\"},\"tokenPrice()\":{\"notice\":\"Price of ERC20 Token\"},\"updateTokenPrice(uint256)\":{\"notice\":\"updateTokenPrice is use to update the token price\"},\"withdraw()\":{\"notice\":\"withdraw is use to take out all the contract balance into owner account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ERC20Token.sol\":\"ERC20Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/BlackList.sol\":{\"keccak256\":\"0x5ea579fedc8b1991962ad8c00d86d3efea5abfb09f13fedeac77097d92eae253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1827e49e85b7f61d3e64e1b403fc23d4be2da74f2d32c87a439010286c17abc\",\"dweb:/ipfs/QmNRgzwMv7Z3fqJnF7jCaD1t5WM7uxe9d2dyoWSGT6PAK6\"]},\"project:/contracts/ERC20Token.sol\":{\"keccak256\":\"0x6c8d7399c78895cbbd6e008fa7305c901a778482064f248e92d86831635b1802\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1765e3b798f793776b9f163fb182369419faee0a2c7270e3c7cd506e139adcae\",\"dweb:/ipfs/QmNXMRuraFubAvJYZL1JCGsyVyKCReCvygoTYvDSFbFB2g\"]},\"project:/contracts/IERC20Token.sol\":{\"keccak256\":\"0x0cdb7474a4f8a7ddccc91398680fcb6a03f29609dbe6a42f44558499b1c7d124\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://75378ff06d491617e08eb36de325583d047d07681d501b6afc4dc82201eede82\",\"dweb:/ipfs/QmRghhiuKAt8dNaBpKjvVzuihvrrny7DnM3sCdqXTVnqKH\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001c9538038062001c9583398101604081905262000034916200023e565b8251839083906200004d906003906020850190620000e1565b50805162000063906004906020840190620000e1565b50506005805460ff19169055506200007b3362000087565b60075550620003049050565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000ef90620002b1565b90600052602060002090601f0160209004810192826200011357600085556200015e565b82601f106200012e57805160ff19168380011785556200015e565b828001600101855582156200015e579182015b828111156200015e57825182559160200191906001019062000141565b506200016c92915062000170565b5090565b5b808211156200016c576000815560010162000171565b600082601f8301126200019957600080fd5b81516001600160401b0380821115620001b657620001b6620002ee565b604051601f8301601f19908116603f01168101908282118183101715620001e157620001e1620002ee565b81604052838152602092508683858801011115620001fe57600080fd5b600091505b8382101562000222578582018301518183018401529082019062000203565b83821115620002345760008385830101525b9695505050505050565b6000806000606084860312156200025457600080fd5b83516001600160401b03808211156200026c57600080fd5b6200027a8783880162000187565b945060208601519150808211156200029157600080fd5b50620002a08682870162000187565b925050604084015190509250925092565b600181811c90821680620002c657607f821691505b60208210811415620002e857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61198180620003146000396000f3fe6080604052600436106101815760003560e01c806365216a41116100d15780638456cb591161008a578063a457c2d711610064578063a457c2d714610437578063a9059cbb14610457578063dd62ed3e14610477578063f2fde38b1461049757600080fd5b80638456cb59146103d75780638da5cb5b146103ec57806395d89b411461042257600080fd5b806365216a4114610323578063676c0d77146103435780636f9fb98a1461036357806370a0823114610376578063715018a6146103ac5780637ff9b596146103c157600080fd5b80633ccfd60b1161013e578063417c73a711610118578063417c73a71461029b5780634838d165146102bb5780634a49ac4c146102eb5780635c975abb1461030b57600080fd5b80633ccfd60b1461025c5780633f4ba83a1461027357806340c10f191461028857600080fd5b806306fdde0314610186578063095ea7b3146101b157806318160ddd146101e157806323b872dd14610200578063313ce56714610220578063395093511461023c575b600080fd5b34801561019257600080fd5b5061019b6104b7565b6040516101a891906117cb565b60405180910390f35b3480156101bd57600080fd5b506101d16101cc366004611667565b610549565b60405190151581526020016101a8565b3480156101ed57600080fd5b506002545b6040519081526020016101a8565b34801561020c57600080fd5b506101d161021b36600461162b565b610561565b34801561022c57600080fd5b50604051601281526020016101a8565b34801561024857600080fd5b506101d1610257366004611667565b610585565b34801561026857600080fd5b506102716105a7565b005b34801561027f57600080fd5b506102716106a9565b610271610296366004611667565b6106bb565b3480156102a757600080fd5b506102716102b63660046115d6565b610917565b3480156102c757600080fd5b506101d16102d63660046115d6565b60066020526000908152604090205460ff1681565b3480156102f757600080fd5b506102716103063660046115d6565b6109d6565b34801561031757600080fd5b5060055460ff166101d1565b34801561032f57600080fd5b5061027161033e366004611691565b610a89565b34801561034f57600080fd5b5061027161035e3660046117b2565b610ca9565b34801561036f57600080fd5b50476101f2565b34801561038257600080fd5b506101f26103913660046115d6565b6001600160a01b031660009081526020819052604090205490565b3480156103b857600080fd5b50610271610d70565b3480156103cd57600080fd5b506101f260075481565b3480156103e357600080fd5b50610271610d82565b3480156103f857600080fd5b5060055461010090046001600160a01b03166040516001600160a01b0390911681526020016101a8565b34801561042e57600080fd5b5061019b610d92565b34801561044357600080fd5b506101d1610452366004611667565b610da1565b34801561046357600080fd5b506101d1610472366004611667565b610e1c565b34801561048357600080fd5b506101f26104923660046115f8565b610e2a565b3480156104a357600080fd5b506102716104b23660046115d6565b610e55565b6060600380546104c6906118ac565b80601f01602080910402602001604051908101604052809291908181526020018280546104f2906118ac565b801561053f5780601f106105145761010080835404028352916020019161053f565b820191906000526020600020905b81548152906001019060200180831161052257829003601f168201915b5050505050905090565b600033610557818585610ece565b5060019392505050565b60003361056f858285610ff2565b61057a858585611066565b506001949350505050565b6000336105578185856105988383610e2a565b6105a29190611875565b610ece565b6105af611234565b600047116106045760405162461bcd60e51b815260206004820181905260248201527f4552433230546f6b656e3a20496e73756666696369656e742062616c616e636560448201526064015b60405180910390fd5b336000816108fc476040518115909202916000818181858888f193505050509050806106695760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016105fb565b6040516001600160a01b03831681527fccc825997dd8b4e327f2a9c9fbfa3d3664e0120031373ced5e68c467ec8f29819060200160405180910390a15050565b6106b1611234565b6106b9611294565b565b6106c36112e6565b816106cd8161132c565b1561072b5760405162461bcd60e51b815260206004820152602860248201527f4552433230546f6b656e3a2054686973206164647265737320697320696e20626044820152671b1858dadb1a5cdd60c21b60648201526084016105fb565b6001600160a01b03831661079d5760405162461bcd60e51b815260206004820152603360248201527f4552433230546f6b656e3a2043616e6e6f74206d696e74204552433230546f6b60448201527232b7103a37902d32b9379020b2323932b9b99760691b60648201526084016105fb565b6107a63361132c565b156108065760405162461bcd60e51b815260206004820152602a60248201527f4552433230546f6b656e3a2043616c6c6572206164647265737320697320626c60448201526930b1b5b634b9ba32b21760b11b60648201526084016105fb565b8161085f5760405162461bcd60e51b815260206004820152602360248201527f4552433230546f6b656e3a20416d6f756e742063616e206e6f74206265205a6560448201526239379760e91b60648201526084016105fb565b8160075461086d919061188d565b3410156108c65760405162461bcd60e51b815260206004820152602160248201527f4552433230546f6b656e3a20496e73756666696369656e742062616c616e63656044820152601760f91b60648201526084016105fb565b6108d0838361134a565b604080516001600160a01b0385168152602081018490527f1f98ee45d72cac8271cfd41cc599153bf1465afc3fc1f0b3e2a97b8f1c4253a9910160405180910390a1505050565b61091f611234565b6109276112e6565b6001600160a01b03811661094d5760405162461bcd60e51b81526004016105fb90611820565b6109568161132c565b156109c95760405162461bcd60e51b815260206004820152603960248201527f4552433230546f6b656e3a20676976656e20626c61636b4c697374416464726560448201527f737320697320616c726561647920626c61636b6c69737465640000000000000060648201526084016105fb565b6109d281611429565b5050565b6109de611234565b6109e66112e6565b6001600160a01b038116610a0c5760405162461bcd60e51b81526004016105fb90611820565b610a158161132c565b610a805760405162461bcd60e51b815260206004820152603660248201527f4552433230546f6b656e3a20676976656e20626c61636b4c69737441646472656044820152751cdcc81a5cc81b9bdd081a5b88189b1858dadb1a5cdd60521b60648201526084016105fb565b6109d281611489565b610a916112e6565b610a99611234565b80518214610af95760405162461bcd60e51b815260206004820152602760248201527f4552433230546f6b656e3a20496e636f727265637420706172616d65746572206044820152663632b733ba341760c91b60648201526084016105fb565b60005b61ffff8116831115610ca357610b3b84848361ffff16818110610b2157610b2161191f565b9050602002016020810190610b3691906115d6565b61132c565b158015610b7c57506000848461ffff8416818110610b5b57610b5b61191f565b9050602002016020810190610b7091906115d6565b6001600160a01b031614155b8015610ba65750818161ffff1681518110610b9957610b9961191f565b6020026020010151600014155b15610c9157610bfc84848361ffff16818110610bc457610bc461191f565b9050602002016020810190610bd991906115d6565b838361ffff1681518110610bef57610bef61191f565b602002602001015161134a565b7f1f98ee45d72cac8271cfd41cc599153bf1465afc3fc1f0b3e2a97b8f1c4253a984848361ffff16818110610c3357610c3361191f565b9050602002016020810190610c4891906115d6565b838361ffff1681518110610c5e57610c5e61191f565b6020026020010151604051610c889291906001600160a01b03929092168252602082015260400190565b60405180910390a15b80610c9b816118e7565b915050610afc565b50505050565b610cb1611234565b806007541415610d355760405162461bcd60e51b815260206004820152604360248201527f4552433230546f6b656e3a206e6577546f6b656e50726963652069732063616e60448201527f206e6f742062652073616d652061732063757272656e7420746f6b656e50726960648201526231b29760e91b608482015260a4016105fb565b60078190556040518181527f6b361c807733cc94a3b7bda39c1c94dcc0511e91aa47b0f7f918068e939768909060200160405180910390a150565b610d78611234565b6106b960006114da565b610d8a611234565b6106b9611534565b6060600480546104c6906118ac565b60003381610daf8286610e2a565b905083811015610e0f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105fb565b61057a8286868403610ece565b600033610557818585611066565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610e5d611234565b6001600160a01b038116610ec25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105fb565b610ecb816114da565b50565b6001600160a01b038316610f305760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105fb565b6001600160a01b038216610f915760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105fb565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610ffe8484610e2a565b90506000198114610ca357818110156110595760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105fb565b610ca38484848403610ece565b6001600160a01b0383166110ca5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105fb565b6001600160a01b03821661112c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105fb565b6001600160a01b038316600090815260208190526040902054818110156111a45760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105fb565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906111db908490611875565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161122791815260200190565b60405180910390a3610ca3565b6005546001600160a01b036101009091041633146106b95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105fb565b61129c611571565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60055460ff16156106b95760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105fb565b6001600160a01b031660009081526006602052604090205460ff1690565b6001600160a01b0382166113a05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105fb565b80600260008282546113b29190611875565b90915550506001600160a01b038216600090815260208190526040812080548392906113df908490611875565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0381166000818152600660209081526040808320805460ff191660011790555192835290917f83f4fb4e43c8e9d38b6fa4c441afe892be28f9724b9c128fb99dfee430f60e0891015b60405180910390a1506001919050565b6001600160a01b0381166000818152600660209081526040808320805460ff191690555192835290917fa5d874c36615fb5b3b7b19ec879ee123ce071c81392af0dea8c60f4fcdf186499101611479565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61153c6112e6565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586112c93390565b60055460ff166106b95760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105fb565b80356001600160a01b03811681146115d157600080fd5b919050565b6000602082840312156115e857600080fd5b6115f1826115ba565b9392505050565b6000806040838503121561160b57600080fd5b611614836115ba565b9150611622602084016115ba565b90509250929050565b60008060006060848603121561164057600080fd5b611649846115ba565b9250611657602085016115ba565b9150604084013590509250925092565b6000806040838503121561167a57600080fd5b611683836115ba565b946020939093013593505050565b6000806000604084860312156116a657600080fd5b833567ffffffffffffffff808211156116be57600080fd5b818601915086601f8301126116d257600080fd5b8135818111156116e157600080fd5b602088818360051b86010111156116f757600080fd5b80840196508195508088013593508284111561171257600080fd5b838801935088601f85011261172657600080fd5b833591508282111561173a5761173a611935565b8160051b604051601f19603f8301168101818110868211171561175f5761175f611935565b604052838152828101945085830182870184018c101561177e57600080fd5b600096505b848710156117a1578035865260019690960195948301948301611783565b508096505050505050509250925092565b6000602082840312156117c457600080fd5b5035919050565b600060208083528351808285015260005b818110156117f8578581018301518582016040015282016117dc565b8181111561180a576000604083870101525b50601f01601f1916929092016040019392505050565b60208082526035908201527f4552433230546f6b656e3a20626c61636b4c697374416464726573732063616e604082015274103737ba103132902d32b9379020b2323932b9b99760591b606082015260800190565b6000821982111561188857611888611909565b500190565b60008160001904831182151516156118a7576118a7611909565b500290565b600181811c908216806118c057607f821691505b602082108114156118e157634e487b7160e01b600052602260045260246000fd5b50919050565b600061ffff808316818114156118ff576118ff611909565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212207de19c77ffa9d860a170f1f593fd737f83e51f04151119ecb24d1fa9740d56f564736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106101815760003560e01c806365216a41116100d15780638456cb591161008a578063a457c2d711610064578063a457c2d714610437578063a9059cbb14610457578063dd62ed3e14610477578063f2fde38b1461049757600080fd5b80638456cb59146103d75780638da5cb5b146103ec57806395d89b411461042257600080fd5b806365216a4114610323578063676c0d77146103435780636f9fb98a1461036357806370a0823114610376578063715018a6146103ac5780637ff9b596146103c157600080fd5b80633ccfd60b1161013e578063417c73a711610118578063417c73a71461029b5780634838d165146102bb5780634a49ac4c146102eb5780635c975abb1461030b57600080fd5b80633ccfd60b1461025c5780633f4ba83a1461027357806340c10f191461028857600080fd5b806306fdde0314610186578063095ea7b3146101b157806318160ddd146101e157806323b872dd14610200578063313ce56714610220578063395093511461023c575b600080fd5b34801561019257600080fd5b5061019b6104b7565b6040516101a891906117cb565b60405180910390f35b3480156101bd57600080fd5b506101d16101cc366004611667565b610549565b60405190151581526020016101a8565b3480156101ed57600080fd5b506002545b6040519081526020016101a8565b34801561020c57600080fd5b506101d161021b36600461162b565b610561565b34801561022c57600080fd5b50604051601281526020016101a8565b34801561024857600080fd5b506101d1610257366004611667565b610585565b34801561026857600080fd5b506102716105a7565b005b34801561027f57600080fd5b506102716106a9565b610271610296366004611667565b6106bb565b3480156102a757600080fd5b506102716102b63660046115d6565b610917565b3480156102c757600080fd5b506101d16102d63660046115d6565b60066020526000908152604090205460ff1681565b3480156102f757600080fd5b506102716103063660046115d6565b6109d6565b34801561031757600080fd5b5060055460ff166101d1565b34801561032f57600080fd5b5061027161033e366004611691565b610a89565b34801561034f57600080fd5b5061027161035e3660046117b2565b610ca9565b34801561036f57600080fd5b50476101f2565b34801561038257600080fd5b506101f26103913660046115d6565b6001600160a01b031660009081526020819052604090205490565b3480156103b857600080fd5b50610271610d70565b3480156103cd57600080fd5b506101f260075481565b3480156103e357600080fd5b50610271610d82565b3480156103f857600080fd5b5060055461010090046001600160a01b03166040516001600160a01b0390911681526020016101a8565b34801561042e57600080fd5b5061019b610d92565b34801561044357600080fd5b506101d1610452366004611667565b610da1565b34801561046357600080fd5b506101d1610472366004611667565b610e1c565b34801561048357600080fd5b506101f26104923660046115f8565b610e2a565b3480156104a357600080fd5b506102716104b23660046115d6565b610e55565b6060600380546104c6906118ac565b80601f01602080910402602001604051908101604052809291908181526020018280546104f2906118ac565b801561053f5780601f106105145761010080835404028352916020019161053f565b820191906000526020600020905b81548152906001019060200180831161052257829003601f168201915b5050505050905090565b600033610557818585610ece565b5060019392505050565b60003361056f858285610ff2565b61057a858585611066565b506001949350505050565b6000336105578185856105988383610e2a565b6105a29190611875565b610ece565b6105af611234565b600047116106045760405162461bcd60e51b815260206004820181905260248201527f4552433230546f6b656e3a20496e73756666696369656e742062616c616e636560448201526064015b60405180910390fd5b336000816108fc476040518115909202916000818181858888f193505050509050806106695760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016105fb565b6040516001600160a01b03831681527fccc825997dd8b4e327f2a9c9fbfa3d3664e0120031373ced5e68c467ec8f29819060200160405180910390a15050565b6106b1611234565b6106b9611294565b565b6106c36112e6565b816106cd8161132c565b1561072b5760405162461bcd60e51b815260206004820152602860248201527f4552433230546f6b656e3a2054686973206164647265737320697320696e20626044820152671b1858dadb1a5cdd60c21b60648201526084016105fb565b6001600160a01b03831661079d5760405162461bcd60e51b815260206004820152603360248201527f4552433230546f6b656e3a2043616e6e6f74206d696e74204552433230546f6b60448201527232b7103a37902d32b9379020b2323932b9b99760691b60648201526084016105fb565b6107a63361132c565b156108065760405162461bcd60e51b815260206004820152602a60248201527f4552433230546f6b656e3a2043616c6c6572206164647265737320697320626c60448201526930b1b5b634b9ba32b21760b11b60648201526084016105fb565b8161085f5760405162461bcd60e51b815260206004820152602360248201527f4552433230546f6b656e3a20416d6f756e742063616e206e6f74206265205a6560448201526239379760e91b60648201526084016105fb565b8160075461086d919061188d565b3410156108c65760405162461bcd60e51b815260206004820152602160248201527f4552433230546f6b656e3a20496e73756666696369656e742062616c616e63656044820152601760f91b60648201526084016105fb565b6108d0838361134a565b604080516001600160a01b0385168152602081018490527f1f98ee45d72cac8271cfd41cc599153bf1465afc3fc1f0b3e2a97b8f1c4253a9910160405180910390a1505050565b61091f611234565b6109276112e6565b6001600160a01b03811661094d5760405162461bcd60e51b81526004016105fb90611820565b6109568161132c565b156109c95760405162461bcd60e51b815260206004820152603960248201527f4552433230546f6b656e3a20676976656e20626c61636b4c697374416464726560448201527f737320697320616c726561647920626c61636b6c69737465640000000000000060648201526084016105fb565b6109d281611429565b5050565b6109de611234565b6109e66112e6565b6001600160a01b038116610a0c5760405162461bcd60e51b81526004016105fb90611820565b610a158161132c565b610a805760405162461bcd60e51b815260206004820152603660248201527f4552433230546f6b656e3a20676976656e20626c61636b4c69737441646472656044820152751cdcc81a5cc81b9bdd081a5b88189b1858dadb1a5cdd60521b60648201526084016105fb565b6109d281611489565b610a916112e6565b610a99611234565b80518214610af95760405162461bcd60e51b815260206004820152602760248201527f4552433230546f6b656e3a20496e636f727265637420706172616d65746572206044820152663632b733ba341760c91b60648201526084016105fb565b60005b61ffff8116831115610ca357610b3b84848361ffff16818110610b2157610b2161191f565b9050602002016020810190610b3691906115d6565b61132c565b158015610b7c57506000848461ffff8416818110610b5b57610b5b61191f565b9050602002016020810190610b7091906115d6565b6001600160a01b031614155b8015610ba65750818161ffff1681518110610b9957610b9961191f565b6020026020010151600014155b15610c9157610bfc84848361ffff16818110610bc457610bc461191f565b9050602002016020810190610bd991906115d6565b838361ffff1681518110610bef57610bef61191f565b602002602001015161134a565b7f1f98ee45d72cac8271cfd41cc599153bf1465afc3fc1f0b3e2a97b8f1c4253a984848361ffff16818110610c3357610c3361191f565b9050602002016020810190610c4891906115d6565b838361ffff1681518110610c5e57610c5e61191f565b6020026020010151604051610c889291906001600160a01b03929092168252602082015260400190565b60405180910390a15b80610c9b816118e7565b915050610afc565b50505050565b610cb1611234565b806007541415610d355760405162461bcd60e51b815260206004820152604360248201527f4552433230546f6b656e3a206e6577546f6b656e50726963652069732063616e60448201527f206e6f742062652073616d652061732063757272656e7420746f6b656e50726960648201526231b29760e91b608482015260a4016105fb565b60078190556040518181527f6b361c807733cc94a3b7bda39c1c94dcc0511e91aa47b0f7f918068e939768909060200160405180910390a150565b610d78611234565b6106b960006114da565b610d8a611234565b6106b9611534565b6060600480546104c6906118ac565b60003381610daf8286610e2a565b905083811015610e0f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105fb565b61057a8286868403610ece565b600033610557818585611066565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610e5d611234565b6001600160a01b038116610ec25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105fb565b610ecb816114da565b50565b6001600160a01b038316610f305760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105fb565b6001600160a01b038216610f915760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105fb565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610ffe8484610e2a565b90506000198114610ca357818110156110595760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105fb565b610ca38484848403610ece565b6001600160a01b0383166110ca5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105fb565b6001600160a01b03821661112c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105fb565b6001600160a01b038316600090815260208190526040902054818110156111a45760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105fb565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906111db908490611875565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161122791815260200190565b60405180910390a3610ca3565b6005546001600160a01b036101009091041633146106b95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105fb565b61129c611571565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60055460ff16156106b95760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105fb565b6001600160a01b031660009081526006602052604090205460ff1690565b6001600160a01b0382166113a05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105fb565b80600260008282546113b29190611875565b90915550506001600160a01b038216600090815260208190526040812080548392906113df908490611875565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0381166000818152600660209081526040808320805460ff191660011790555192835290917f83f4fb4e43c8e9d38b6fa4c441afe892be28f9724b9c128fb99dfee430f60e0891015b60405180910390a1506001919050565b6001600160a01b0381166000818152600660209081526040808320805460ff191690555192835290917fa5d874c36615fb5b3b7b19ec879ee123ce071c81392af0dea8c60f4fcdf186499101611479565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61153c6112e6565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586112c93390565b60055460ff166106b95760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105fb565b80356001600160a01b03811681146115d157600080fd5b919050565b6000602082840312156115e857600080fd5b6115f1826115ba565b9392505050565b6000806040838503121561160b57600080fd5b611614836115ba565b9150611622602084016115ba565b90509250929050565b60008060006060848603121561164057600080fd5b611649846115ba565b9250611657602085016115ba565b9150604084013590509250925092565b6000806040838503121561167a57600080fd5b611683836115ba565b946020939093013593505050565b6000806000604084860312156116a657600080fd5b833567ffffffffffffffff808211156116be57600080fd5b818601915086601f8301126116d257600080fd5b8135818111156116e157600080fd5b602088818360051b86010111156116f757600080fd5b80840196508195508088013593508284111561171257600080fd5b838801935088601f85011261172657600080fd5b833591508282111561173a5761173a611935565b8160051b604051601f19603f8301168101818110868211171561175f5761175f611935565b604052838152828101945085830182870184018c101561177e57600080fd5b600096505b848710156117a1578035865260019690960195948301948301611783565b508096505050505050509250925092565b6000602082840312156117c457600080fd5b5035919050565b600060208083528351808285015260005b818110156117f8578581018301518582016040015282016117dc565b8181111561180a576000604083870101525b50601f01601f1916929092016040019392505050565b60208082526035908201527f4552433230546f6b656e3a20626c61636b4c697374416464726573732063616e604082015274103737ba103132902d32b9379020b2323932b9b99760591b606082015260800190565b6000821982111561188857611888611909565b500190565b60008160001904831182151516156118a7576118a7611909565b500290565b600181811c908216806118c057607f821691505b602082108114156118e157634e487b7160e01b600052602260045260246000fd5b50919050565b600061ffff808316818114156118ff576118ff611909565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212207de19c77ffa9d860a170f1f593fd737f83e51f04151119ecb24d1fa9740d56f564736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2046:9",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:9",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "78:821:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "127:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "136:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "129:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "129:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "129:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "106:6:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "114:4:9",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "102:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "102:17:9"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "121:3:9"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "98:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "98:27:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "91:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "91:35:9"
                  },
                  "nodeType": "YulIf",
                  "src": "88:55:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "152:23:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "168:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "162:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "162:13:9"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "156:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "184:28:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "202:2:9",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "206:1:9",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "198:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "198:10:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "210:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "194:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "194:18:9"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "188:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "235:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "237:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "237:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "237:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "227:2:9"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "231:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "224:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "224:10:9"
                  },
                  "nodeType": "YulIf",
                  "src": "221:36:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "266:17:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "280:2:9",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "276:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "276:7:9"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "270:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "292:23:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "312:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "306:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "306:9:9"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "296:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "324:71:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "346:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "370:2:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "374:4:9",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "366:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "366:13:9"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "381:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "362:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "362:22:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "386:2:9",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "358:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "358:31:9"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "391:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "354:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "354:40:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "342:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "342:53:9"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "328:10:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "454:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "456:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "456:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "456:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "413:10:9"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "425:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "410:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "410:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "433:10:9"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "445:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "430:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "430:22:9"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "407:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "407:46:9"
                  },
                  "nodeType": "YulIf",
                  "src": "404:72:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "492:2:9",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "496:10:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "485:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "485:22:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "485:22:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "523:6:9"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "531:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "516:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "516:18:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "516:18:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "543:14:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "553:4:9",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "547:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "603:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "612:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "615:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "605:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "605:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "605:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "580:6:9"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "588:2:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "576:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "576:15:9"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "593:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "572:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "572:24:9"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "598:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "569:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "569:33:9"
                  },
                  "nodeType": "YulIf",
                  "src": "566:53:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "628:10:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "637:1:9",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "632:1:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "693:87:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "722:6:9"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "730:1:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "718:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "718:14:9"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "734:2:9"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "714:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "714:23:9"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "offset",
                                          "nodeType": "YulIdentifier",
                                          "src": "753:6:9"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "761:1:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "749:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "749:14:9"
                                    },
                                    {
                                      "name": "_4",
                                      "nodeType": "YulIdentifier",
                                      "src": "765:2:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "745:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "745:23:9"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "739:5:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "739:30:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "707:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "707:63:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "707:63:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "658:1:9"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "661:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "655:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "655:9:9"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "665:19:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "667:15:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "676:1:9"
                            },
                            {
                              "name": "_4",
                              "nodeType": "YulIdentifier",
                              "src": "679:2:9"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "672:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "672:10:9"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "667:1:9"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "651:3:9",
                    "statements": []
                  },
                  "src": "647:133:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "810:59:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "839:6:9"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "847:2:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "835:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "835:15:9"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "852:2:9"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "831:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "831:24:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "857:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "824:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "824:35:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "824:35:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "795:1:9"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "798:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "792:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "792:9:9"
                  },
                  "nodeType": "YulIf",
                  "src": "789:80:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "878:15:9",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "887:6:9"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "878:5:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "52:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "60:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "68:5:9",
                "type": ""
              }
            ],
            "src": "14:885:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1039:488:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1085:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1094:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1097:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1087:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1087:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1087:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1060:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1069:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1056:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1056:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1081:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1052:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1052:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1049:52:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1110:30:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1130:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1124:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1124:16:9"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1114:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1149:28:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1167:2:9",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1171:1:9",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1163:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1163:10:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1175:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1159:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1159:18:9"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1153:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1204:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1213:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1216:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1206:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1206:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1206:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1192:6:9"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1200:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1189:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1189:14:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1186:34:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1229:71:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1272:9:9"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1283:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1268:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1268:22:9"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1292:7:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1239:28:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1239:61:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1229:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1309:41:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1335:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1346:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1331:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1331:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1325:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1325:25:9"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1313:8:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1379:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1388:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1391:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1381:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1381:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1381:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1365:8:9"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1375:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1362:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1362:16:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1359:36:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1404:73:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1447:9:9"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "1458:8:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1443:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1443:24:9"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1469:7:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1414:28:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1414:63:9"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1404:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1486:35:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1506:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1517:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1502:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1502:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1496:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1496:25:9"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1486:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "989:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1000:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1012:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1020:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1028:6:9",
                "type": ""
              }
            ],
            "src": "904:623:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1587:325:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1597:22:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1611:1:9",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1614:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "1607:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1607:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1597:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1628:38:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1658:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1664:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1654:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1654:12:9"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1632:18:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1705:31:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1707:27:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1721:6:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1729:4:9",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1717:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1717:17:9"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1707:6:9"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1685:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1678:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1678:26:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1675:61:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1795:111:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1816:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1823:3:9",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1828:10:9",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1819:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1819:20:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1809:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1809:31:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1809:31:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1860:1:9",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1863:4:9",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1853:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1853:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1853:15:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1888:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1891:4:9",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1881:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1881:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1881:15:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1751:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1774:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1782:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1771:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1771:14:9"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1748:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1748:38:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1745:161:9"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1567:4:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1576:6:9",
                "type": ""
              }
            ],
            "src": "1532:380:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1949:95:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1966:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1973:3:9",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1978:10:9",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1969:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1969:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1959:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1959:31:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1959:31:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2006:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2009:4:9",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1999:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1999:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1999:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2030:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2033:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2023:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2023:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2023:15:9"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "1917:127:9"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:15706:9",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:9",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:9"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:9",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:9",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:9"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:9"
                  },
                  "nodeType": "YulIf",
                  "src": "111:70:9"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:9",
                "type": ""
              }
            ],
            "src": "14:173:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:116:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "320:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "272:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "333:39:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "362:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "343:18:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "343:29:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "333:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:9",
                "type": ""
              }
            ],
            "src": "192:186:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "470:173:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "516:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "525:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "528:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "518:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "518:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "518:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "491:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "500:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "487:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "487:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "512:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "483:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "483:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "480:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "541:39:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "570:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "551:18:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:29:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "541:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "589:48:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "622:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "633:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "618:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "618:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "599:18:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "599:38:9"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "589:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "428:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "439:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "451:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "459:6:9",
                "type": ""
              }
            ],
            "src": "383:260:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "752:224:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "798:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "807:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "810:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "800:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "800:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "800:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "773:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "782:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "769:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "769:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "794:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "765:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "765:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "762:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "823:39:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "852:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "833:18:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "833:29:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "823:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "871:48:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "904:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "915:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "900:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "900:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "881:18:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "881:38:9"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "871:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "928:42:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "955:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "966:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "951:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "951:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "938:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "938:32:9"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "928:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "702:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "713:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "725:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "733:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "741:6:9",
                "type": ""
              }
            ],
            "src": "648:328:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1068:167:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1114:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1123:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1126:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1116:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1116:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1116:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1089:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1098:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1085:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1085:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1110:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1081:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1081:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1078:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1139:39:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1168:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1149:18:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1149:29:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1139:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1187:42:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1214:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1225:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1210:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1210:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1197:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1197:32:9"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1187:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1026:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1037:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1049:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1057:6:9",
                "type": ""
              }
            ],
            "src": "981:254:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1387:1453:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1433:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1442:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1445:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1435:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1435:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1435:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1408:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1417:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1404:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1404:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1429:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1400:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1400:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1397:52:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1458:37:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1485:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1472:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1472:23:9"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1462:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1504:28:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1514:18:9",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1508:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1559:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1568:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1571:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1561:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1561:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1561:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1547:6:9"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1555:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1544:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1544:14:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1541:34:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1584:32:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1598:9:9"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1609:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1594:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1594:22:9"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1588:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1664:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1673:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1676:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1666:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1666:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1666:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1643:2:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1647:4:9",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1639:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1639:13:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1654:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1635:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1635:27:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1628:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1628:35:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1625:55:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1689:30:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1716:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1703:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1703:16:9"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1693:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1746:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1755:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1758:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1748:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1748:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1748:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1734:6:9"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1742:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1731:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1731:14:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1728:34:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1771:14:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1781:4:9",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1775:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1843:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1852:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1855:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1845:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1845:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1845:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1808:2:9"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1816:1:9",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1819:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1812:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1812:14:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1804:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1804:23:9"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1829:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1800:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1800:32:9"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1834:7:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1797:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1797:45:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1794:65:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1868:21:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1882:2:9"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1886:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1878:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1878:11:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1868:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1898:16:9",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "1908:6:9"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1898:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1923:48:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1956:9:9"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1967:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1952:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1952:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1939:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1939:32:9"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1927:8:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2000:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2009:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2012:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2002:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2002:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2002:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1986:8:9"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1996:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1983:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1983:16:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1980:36:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2025:34:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2039:9:9"
                      },
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "2050:8:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2035:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2035:24:9"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "2029:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2107:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2116:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2119:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2109:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2109:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2109:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "2086:2:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2090:4:9",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2082:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2082:13:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2097:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2078:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2078:27:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2071:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2071:35:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2068:55:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2132:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "2155:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2142:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2142:16:9"
                  },
                  "variables": [
                    {
                      "name": "_5",
                      "nodeType": "YulTypedName",
                      "src": "2136:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2181:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2183:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2183:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2183:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_5",
                        "nodeType": "YulIdentifier",
                        "src": "2173:2:9"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2177:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2170:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2170:10:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2167:36:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2212:20:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2226:1:9",
                        "type": "",
                        "value": "5"
                      },
                      {
                        "name": "_5",
                        "nodeType": "YulIdentifier",
                        "src": "2229:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "2222:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2222:10:9"
                  },
                  "variables": [
                    {
                      "name": "_6",
                      "nodeType": "YulTypedName",
                      "src": "2216:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2241:23:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2261:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2255:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2255:9:9"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "2245:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2273:56:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2295:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_6",
                                "nodeType": "YulIdentifier",
                                "src": "2311:2:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2315:2:9",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2307:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2307:11:9"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2324:2:9",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "2320:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2320:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2303:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2303:25:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2291:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2291:38:9"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2277:10:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2388:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2390:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2390:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2390:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2347:10:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2359:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2344:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2344:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2367:10:9"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2379:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2364:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2364:22:9"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2341:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2341:46:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2338:72:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2426:2:9",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2430:10:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2419:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2419:22:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2419:22:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2450:17:9",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2461:6:9"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "2454:3:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2483:6:9"
                      },
                      {
                        "name": "_5",
                        "nodeType": "YulIdentifier",
                        "src": "2491:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2476:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2476:18:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2476:18:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2503:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2514:6:9"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2522:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2510:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2510:15:9"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "2503:3:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2534:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "2549:2:9"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2553:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2545:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2545:11:9"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "2538:3:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2602:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2611:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2614:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2604:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2604:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2604:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "2579:2:9"
                              },
                              {
                                "name": "_6",
                                "nodeType": "YulIdentifier",
                                "src": "2583:2:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2575:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2575:11:9"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "2588:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2571:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2571:20:9"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2593:7:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2568:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2568:33:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2565:53:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2627:10:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2636:1:9",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2631:1:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2691:118:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "2712:3:9"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "2730:3:9"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "2717:12:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2717:17:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2705:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2705:30:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2705:30:9"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2748:19:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "2759:3:9"
                            },
                            {
                              "name": "_3",
                              "nodeType": "YulIdentifier",
                              "src": "2764:2:9"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2755:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2755:12:9"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "2748:3:9"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2780:19:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "2791:3:9"
                            },
                            {
                              "name": "_3",
                              "nodeType": "YulIdentifier",
                              "src": "2796:2:9"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2787:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2787:12:9"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "2780:3:9"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2657:1:9"
                      },
                      {
                        "name": "_5",
                        "nodeType": "YulIdentifier",
                        "src": "2660:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2654:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2654:9:9"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2664:18:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2666:14:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2675:1:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2678:1:9",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2671:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2671:9:9"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2666:1:9"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2650:3:9",
                    "statements": []
                  },
                  "src": "2646:163:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2818:16:9",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2828:6:9"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2818:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1337:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1348:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1360:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1368:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1376:6:9",
                "type": ""
              }
            ],
            "src": "1240:1600:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2915:110:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2961:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2970:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2973:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2963:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2963:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2963:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2936:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2945:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2932:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2932:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2957:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2928:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2928:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2925:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2986:33:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3009:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2996:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2996:23:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2986:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2881:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2892:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2904:6:9",
                "type": ""
              }
            ],
            "src": "2845:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3131:102:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3141:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3153:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3164:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3149:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3149:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3141:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3183:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3198:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3214:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3219:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3210:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3210:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3223:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3206:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3206:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3194:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3194:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3176:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3176:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3176:51:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3100:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3111:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3122:4:9",
                "type": ""
              }
            ],
            "src": "3030:203:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3347:102:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3357:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3369:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3380:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3365:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3365:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3357:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3399:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3414:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3430:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3435:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3426:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3426:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3439:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3422:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3422:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3410:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3410:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3392:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3392:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3392:51:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3316:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3327:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3338:4:9",
                "type": ""
              }
            ],
            "src": "3238:211:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3583:145:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3593:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3605:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3616:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3601:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3601:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3593:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3635:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3650:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3666:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3671:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3662:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3662:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3675:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3658:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3658:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3646:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3646:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3628:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3628:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3628:51:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3699:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3710:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3695:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3695:18:9"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3715:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3688:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3688:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3688:34:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3544:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3555:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3563:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3574:4:9",
                "type": ""
              }
            ],
            "src": "3454:274:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3828:92:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3838:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3850:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3861:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3846:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3846:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3838:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3880:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3905:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3898:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3898:14:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3891:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3891:22:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3873:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3873:41:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3873:41:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3797:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3808:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3819:4:9",
                "type": ""
              }
            ],
            "src": "3733:187:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4046:476:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4056:12:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4066:2:9",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4060:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4084:9:9"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4095:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4077:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4077:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4077:21:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4107:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4127:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4121:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4121:13:9"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4111:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4154:9:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4165:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4150:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4150:18:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4170:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4143:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4143:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4143:34:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4186:10:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4195:1:9",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "4190:1:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4255:90:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "4284:9:9"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "4295:1:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4280:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4280:17:9"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4299:2:9",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4276:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4276:26:9"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "4318:6:9"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "4326:1:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "4314:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4314:14:9"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "4330:2:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4310:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4310:23:9"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "4304:5:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4304:30:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4269:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4269:66:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4269:66:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4216:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4219:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4213:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4213:13:9"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4227:19:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4229:15:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4238:1:9"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4241:2:9"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4234:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4234:10:9"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4229:1:9"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4209:3:9",
                    "statements": []
                  },
                  "src": "4205:140:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4379:66:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "4408:9:9"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "4419:6:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4404:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4404:22:9"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4428:2:9",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4400:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4400:31:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4433:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4393:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4393:42:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4393:42:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4360:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4363:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4357:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4357:13:9"
                  },
                  "nodeType": "YulIf",
                  "src": "4354:91:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4454:62:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4470:9:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4489:6:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4497:2:9",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4485:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4485:15:9"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4506:2:9",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "4502:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4502:7:9"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4481:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4481:29:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4466:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4466:45:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4513:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4462:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4462:54:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4454:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4015:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4026:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4037:4:9",
                "type": ""
              }
            ],
            "src": "3925:597:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4701:244:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4718:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4729:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4711:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4711:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4711:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4752:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4763:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4748:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4748:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4768:2:9",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4741:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4741:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4741:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4791:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4802:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4787:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4787:18:9"
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a20676976656e20626c61636b4c6973744164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4807:34:9",
                        "type": "",
                        "value": "ERC20Token: given blackListAddre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4780:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4780:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4780:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4862:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4873:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4858:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4858:18:9"
                      },
                      {
                        "hexValue": "7373206973206e6f7420696e20626c61636b6c697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4878:24:9",
                        "type": "",
                        "value": "ss is not in blacklist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4851:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4851:52:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4851:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4912:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4924:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4935:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4920:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4920:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4912:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_04bb66460939ea194d503df110190e52906b18189ab5ed1ca23a15911a5a9a66__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4678:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4692:4:9",
                "type": ""
              }
            ],
            "src": "4527:418:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5124:225:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5141:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5152:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5134:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5134:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5134:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5175:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5186:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5171:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5171:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5191:2:9",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5164:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5164:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5164:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5214:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5225:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5210:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5210:18:9"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5230:34:9",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5203:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5203:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5203:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5285:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5296:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5281:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5281:18:9"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5301:5:9",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5274:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5274:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5274:33:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5316:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5328:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5339:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5324:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5324:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5316:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5101:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5115:4:9",
                "type": ""
              }
            ],
            "src": "4950:399:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5528:170:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5545:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5556:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5538:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5538:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5538:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5579:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5590:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5575:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5575:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5595:2:9",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5568:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5568:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5568:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5618:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5629:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5614:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5614:18:9"
                      },
                      {
                        "hexValue": "5061757361626c653a206e6f7420706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5634:22:9",
                        "type": "",
                        "value": "Pausable: not paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5607:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5607:50:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5607:50:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5666:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5678:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5689:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5674:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5674:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5666:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5505:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5519:4:9",
                "type": ""
              }
            ],
            "src": "5354:344:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5877:228:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5894:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5905:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5887:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5887:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5887:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5928:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5939:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5924:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5924:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5944:2:9",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5917:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5917:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5917:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5967:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5978:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5963:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5963:18:9"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5983:34:9",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5956:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5956:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5956:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6038:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6049:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6034:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6034:18:9"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6054:8:9",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6027:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6027:36:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6027:36:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6072:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6084:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6095:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6080:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6080:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6072:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5854:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5868:4:9",
                "type": ""
              }
            ],
            "src": "5703:402:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6284:224:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6301:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6312:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6294:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6294:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6294:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6335:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6346:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6331:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6331:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6351:2:9",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6324:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6324:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6324:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6374:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6385:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6370:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6370:18:9"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6390:34:9",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6363:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6363:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6363:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6445:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6456:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6441:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6441:18:9"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6461:4:9",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6434:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6434:32:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6434:32:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6475:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6487:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6498:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6483:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6483:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6475:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6261:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6275:4:9",
                "type": ""
              }
            ],
            "src": "6110:398:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6687:229:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6704:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6715:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6697:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6697:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6697:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6738:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6749:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6734:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6734:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6754:2:9",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6727:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6727:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6727:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6777:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6788:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6773:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6773:18:9"
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a20496e636f727265637420706172616d6574657220",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6793:34:9",
                        "type": "",
                        "value": "ERC20Token: Incorrect parameter "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6766:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6766:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6766:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6848:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6859:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6844:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6844:18:9"
                      },
                      {
                        "hexValue": "6c656e6774682e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6864:9:9",
                        "type": "",
                        "value": "length."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6837:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6837:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6837:37:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6883:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6895:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6906:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6891:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6891:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6883:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2a144a05822be9f779d4fcf3ca1c70749eeb283966c5c3e4740758598fce48f2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6664:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6678:4:9",
                "type": ""
              }
            ],
            "src": "6513:403:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7095:179:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7112:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7123:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7105:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7105:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7105:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7146:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7157:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7142:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7142:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7162:2:9",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7135:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7135:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7135:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7185:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7196:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7181:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7181:18:9"
                      },
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7201:31:9",
                        "type": "",
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7174:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7174:59:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7174:59:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7242:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7254:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7265:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7250:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7250:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7242:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7072:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7086:4:9",
                "type": ""
              }
            ],
            "src": "6921:353:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7453:228:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7470:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7481:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7463:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7463:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7463:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7504:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7515:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7500:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7500:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7520:2:9",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7493:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7493:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7493:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7543:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7554:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7539:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7539:18:9"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7559:34:9",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7532:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7532:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7532:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7614:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7625:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7610:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7610:18:9"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7630:8:9",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7603:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7603:36:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7603:36:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7648:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7660:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7671:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7656:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7656:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7648:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7430:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7444:4:9",
                "type": ""
              }
            ],
            "src": "7279:402:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7860:170:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7877:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7888:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7870:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7870:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7870:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7911:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7922:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7907:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7907:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7927:2:9",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7900:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7900:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7900:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7950:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7961:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7946:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7946:18:9"
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7966:22:9",
                        "type": "",
                        "value": "Failed to send Ether"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7939:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7939:50:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7939:50:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7998:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8010:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8021:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8006:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8006:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7998:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7837:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7851:4:9",
                "type": ""
              }
            ],
            "src": "7686:344:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8209:166:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8226:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8237:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8219:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8219:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8219:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8260:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8271:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8256:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8256:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8276:2:9",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8249:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8249:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8249:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8299:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8310:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8295:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8295:18:9"
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8315:18:9",
                        "type": "",
                        "value": "Pausable: paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8288:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8288:46:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8288:46:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8343:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8355:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8366:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8351:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8351:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8343:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8186:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8200:4:9",
                "type": ""
              }
            ],
            "src": "8035:340:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8554:225:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8571:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8582:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8564:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8564:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8564:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8605:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8616:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8601:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8601:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8621:2:9",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8594:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8594:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8594:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8644:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8655:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8640:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8640:18:9"
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a20416d6f756e742063616e206e6f74206265205a65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8660:34:9",
                        "type": "",
                        "value": "ERC20Token: Amount can not be Ze"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8633:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8633:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8633:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8715:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8726:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8711:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8711:18:9"
                      },
                      {
                        "hexValue": "726f2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8731:5:9",
                        "type": "",
                        "value": "ro."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8704:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8704:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8704:33:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8746:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8758:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8769:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8754:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8754:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8746:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7594518c2adef8dbe8aa15243e44996b5dad04116faec001e090d48a91777191__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8531:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8545:4:9",
                "type": ""
              }
            ],
            "src": "8380:399:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8958:230:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8975:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8986:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8968:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8968:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8968:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9009:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9020:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9005:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9005:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9025:2:9",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8998:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8998:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8998:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9048:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9059:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9044:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9044:18:9"
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a2054686973206164647265737320697320696e2062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9064:34:9",
                        "type": "",
                        "value": "ERC20Token: This address is in b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9037:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9037:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9037:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9119:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9130:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9115:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9115:18:9"
                      },
                      {
                        "hexValue": "6c61636b6c697374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9135:10:9",
                        "type": "",
                        "value": "lacklist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9108:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9108:38:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9108:38:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9155:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9167:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9178:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9163:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9163:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9155:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_84cdcd64eef2869c5caf00f30e3e342b13063b763240f35343b92941e22d83ea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8935:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8949:4:9",
                "type": ""
              }
            ],
            "src": "8784:404:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9367:182:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9384:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9395:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9377:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9377:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9377:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9418:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9429:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9414:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9414:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9434:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9407:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9407:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9407:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9457:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9468:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9453:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9453:18:9"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9473:34:9",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9446:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9446:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9446:62:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9517:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9529:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9540:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9525:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9525:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9517:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9344:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9358:4:9",
                "type": ""
              }
            ],
            "src": "9193:356:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9728:247:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9745:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9756:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9738:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9738:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9738:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9779:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9790:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9775:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9775:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9795:2:9",
                        "type": "",
                        "value": "57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9768:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9768:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9768:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9818:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9829:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9814:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9814:18:9"
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a20676976656e20626c61636b4c6973744164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9834:34:9",
                        "type": "",
                        "value": "ERC20Token: given blackListAddre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9807:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9807:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9807:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9889:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9900:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9885:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9885:18:9"
                      },
                      {
                        "hexValue": "737320697320616c726561647920626c61636b6c6973746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9905:27:9",
                        "type": "",
                        "value": "ss is already blacklisted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9878:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9878:55:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9878:55:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9942:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9954:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9965:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9950:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9950:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9942:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9b7905bbeb56fcea347de262147601586ae74c0c2eddae91ccbea0fa9259d1e1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9705:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9719:4:9",
                "type": ""
              }
            ],
            "src": "9554:421:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10154:297:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10171:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10182:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10164:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10164:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10164:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10205:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10216:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10201:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10201:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10221:2:9",
                        "type": "",
                        "value": "67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10194:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10194:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10194:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10244:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10255:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10240:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10240:18:9"
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a206e6577546f6b656e50726963652069732063616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10260:34:9",
                        "type": "",
                        "value": "ERC20Token: newTokenPrice is can"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10233:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10233:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10233:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10315:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10326:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10311:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10311:18:9"
                      },
                      {
                        "hexValue": "206e6f742062652073616d652061732063757272656e7420746f6b656e507269",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10331:34:9",
                        "type": "",
                        "value": " not be same as current tokenPri"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10304:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10304:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10304:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10386:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10397:3:9",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10382:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10382:19:9"
                      },
                      {
                        "hexValue": "63652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10403:5:9",
                        "type": "",
                        "value": "ce."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10375:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10375:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10375:34:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10418:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10430:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10441:3:9",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10426:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10426:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10418:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a40529ab6330f2ab371d8f2c5590676b5587bf17188248b6233c4769c4d5b37d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10131:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10145:4:9",
                "type": ""
              }
            ],
            "src": "9980:471:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10630:243:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10647:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10658:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10640:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10640:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10640:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10681:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10692:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10677:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10677:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10697:2:9",
                        "type": "",
                        "value": "53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10670:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10670:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10670:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10720:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10731:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10716:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10716:18:9"
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a20626c61636b4c697374416464726573732063616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10736:34:9",
                        "type": "",
                        "value": "ERC20Token: blackListAddress can"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10709:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10709:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10709:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10791:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10802:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10787:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10787:18:9"
                      },
                      {
                        "hexValue": "206e6f74206265205a65726f20416464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10807:23:9",
                        "type": "",
                        "value": " not be Zero Address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10780:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10780:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10780:51:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10840:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10852:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10863:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10848:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10848:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10840:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b1059aca452045852e0556aeb5bc8fed5168c6a51683af6a476ea395e51c7486__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10607:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10621:4:9",
                "type": ""
              }
            ],
            "src": "10456:417:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11052:241:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11069:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11080:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11062:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11062:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11062:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11103:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11114:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11099:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11099:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11119:2:9",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11092:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11092:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11092:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11142:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11153:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11138:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11138:18:9"
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a2043616e6e6f74206d696e74204552433230546f6b",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11158:34:9",
                        "type": "",
                        "value": "ERC20Token: Cannot mint ERC20Tok"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11131:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11131:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11131:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11213:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11224:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11209:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11209:18:9"
                      },
                      {
                        "hexValue": "656e20746f205a65726f20416464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11229:21:9",
                        "type": "",
                        "value": "en to Zero Address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11202:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11202:49:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11202:49:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11260:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11272:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11283:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11268:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11268:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11260:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b57838eccd8599dfbbe2178cdb450aec649e33a5486a20878b09db101c6230a5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11029:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11043:4:9",
                "type": ""
              }
            ],
            "src": "10878:415:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11472:227:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11489:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11500:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11482:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11482:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11482:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11523:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11534:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11519:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11519:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11539:2:9",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11512:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11512:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11512:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11562:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11573:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11558:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11558:18:9"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11578:34:9",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11551:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11551:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11551:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11633:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11644:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11629:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11629:18:9"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11649:7:9",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11622:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11622:35:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11622:35:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11666:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11678:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11689:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11674:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11674:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11666:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11449:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11463:4:9",
                "type": ""
              }
            ],
            "src": "11298:401:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11878:226:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11895:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11906:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11888:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11888:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11888:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11929:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11940:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11925:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11925:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11945:2:9",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11918:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11918:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11918:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11968:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11979:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11964:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11964:18:9"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11984:34:9",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11957:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11957:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11957:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12039:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12050:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12035:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12035:18:9"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12055:6:9",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12028:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12028:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12028:34:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12071:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12083:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12094:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12079:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12079:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12071:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11855:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11869:4:9",
                "type": ""
              }
            ],
            "src": "11704:400:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12283:232:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12300:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12311:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12293:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12293:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12293:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12334:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12345:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12330:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12330:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12350:2:9",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12323:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12323:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12323:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12373:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12384:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12369:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12369:18:9"
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a2043616c6c6572206164647265737320697320626c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12389:34:9",
                        "type": "",
                        "value": "ERC20Token: Caller address is bl"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12362:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12362:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12362:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12444:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12455:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12440:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12440:18:9"
                      },
                      {
                        "hexValue": "61636b6c69737465642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12460:12:9",
                        "type": "",
                        "value": "acklisted."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12433:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12433:40:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12433:40:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12482:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12494:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12505:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12490:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12490:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12482:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cfef99352760e86c76a1fc4522d10219b9aac9f229b236fa6e44be584cde32e5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12260:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12274:4:9",
                "type": ""
              }
            ],
            "src": "12109:406:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12694:182:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12711:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12722:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12704:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12704:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12704:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12745:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12756:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12741:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12741:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12761:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12734:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12734:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12734:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12784:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12795:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12780:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12780:18:9"
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a20496e73756666696369656e742062616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12800:34:9",
                        "type": "",
                        "value": "ERC20Token: Insufficient balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12773:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12773:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12773:62:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12844:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12856:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12867:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12852:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12852:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12844:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d996262e27ec4299be34f8d22baa37bd148c95e193553c255fd0834e07b3b928__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12671:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12685:4:9",
                "type": ""
              }
            ],
            "src": "12520:356:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13055:223:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13072:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13083:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13065:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13065:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13065:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13106:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13117:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13102:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13102:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13122:2:9",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13095:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13095:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13095:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13145:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13156:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13141:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13141:18:9"
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a20496e73756666696369656e742062616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13161:34:9",
                        "type": "",
                        "value": "ERC20Token: Insufficient balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13134:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13134:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13134:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13216:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13227:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13212:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13212:18:9"
                      },
                      {
                        "hexValue": "2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13232:3:9",
                        "type": "",
                        "value": "."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13205:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13205:31:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13205:31:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13245:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13257:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13268:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13253:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13253:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13245:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f787a0648df480862a8181849fa54fb00c232e114b8288cbe998ffcda0c9f77d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13032:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13046:4:9",
                "type": ""
              }
            ],
            "src": "12881:397:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13457:227:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13474:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13485:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13467:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13467:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13467:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13508:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13519:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13504:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13504:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13524:2:9",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13497:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13497:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13497:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13547:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13558:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13543:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13543:18:9"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13563:34:9",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13536:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13536:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13536:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13618:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13629:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13614:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13614:18:9"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13634:7:9",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13607:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13607:35:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13607:35:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13651:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13663:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13674:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13659:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13659:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13651:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13434:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13448:4:9",
                "type": ""
              }
            ],
            "src": "13283:401:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13863:181:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13880:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13891:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13873:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13873:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13873:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13914:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13925:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13910:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13910:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13930:2:9",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13903:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13903:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13903:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13953:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13964:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13949:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13949:18:9"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13969:33:9",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13942:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13942:61:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13942:61:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14012:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14024:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14035:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14020:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14020:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14012:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13840:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13854:4:9",
                "type": ""
              }
            ],
            "src": "13689:355:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14150:76:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14160:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14172:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14183:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14168:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14168:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14160:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14202:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14213:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14195:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14195:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14195:25:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14119:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14130:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14141:4:9",
                "type": ""
              }
            ],
            "src": "14049:177:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14328:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14338:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14350:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14361:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14346:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14346:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14338:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14380:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14395:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14403:4:9",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14391:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14391:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14373:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14373:36:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14373:36:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14297:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14308:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14319:4:9",
                "type": ""
              }
            ],
            "src": "14231:184:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14468:80:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14495:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14497:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14497:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14497:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14484:1:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14491:1:9"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "14487:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14487:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "14481:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14481:13:9"
                  },
                  "nodeType": "YulIf",
                  "src": "14478:39:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14526:16:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14537:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14540:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14533:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14533:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "14526:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14451:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14454:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "14460:3:9",
                "type": ""
              }
            ],
            "src": "14420:128:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14605:116:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14664:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14666:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14666:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14666:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14636:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "14629:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14629:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "14622:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14622:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14644:1:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14655:1:9",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "14651:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14651:6:9"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14659:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "14647:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14647:14:9"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "14641:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14641:21:9"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14618:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14618:45:9"
                  },
                  "nodeType": "YulIf",
                  "src": "14615:71:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14695:20:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14710:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14713:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "14706:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14706:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "14695:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14584:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14587:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "14593:7:9",
                "type": ""
              }
            ],
            "src": "14553:168:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14781:325:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14791:22:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14805:1:9",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "14808:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "14801:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14801:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "14791:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14822:38:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "14852:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14858:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14848:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14848:12:9"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "14826:18:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14899:31:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "14901:27:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "14915:6:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14923:4:9",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "14911:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14911:17:9"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "14901:6:9"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "14879:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14872:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14872:26:9"
                  },
                  "nodeType": "YulIf",
                  "src": "14869:61:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14989:111:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15010:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "15017:3:9",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "15022:10:9",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "15013:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15013:20:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "15003:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15003:31:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15003:31:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15054:1:9",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15057:4:9",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "15047:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15047:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15047:15:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15082:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15085:4:9",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15075:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15075:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15075:15:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "14945:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "14968:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14976:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "14965:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14965:14:9"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "14942:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14942:38:9"
                  },
                  "nodeType": "YulIf",
                  "src": "14939:161:9"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "14761:4:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "14770:6:9",
                "type": ""
              }
            ],
            "src": "14726:380:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15157:151:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15167:16:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "15177:6:9",
                    "type": "",
                    "value": "0xffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "15171:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15192:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15211:5:9"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "15218:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "15207:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15207:14:9"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "15196:7:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15249:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "15251:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15251:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15251:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "15236:7:9"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "15245:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "15233:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15233:15:9"
                  },
                  "nodeType": "YulIf",
                  "src": "15230:41:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15280:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "15291:7:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15300:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15287:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15287:15:9"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "15280:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint16",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15139:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "15149:3:9",
                "type": ""
              }
            ],
            "src": "15111:197:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15345:95:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15362:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15369:3:9",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15374:10:9",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "15365:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15365:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15355:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15355:31:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15355:31:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15402:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15405:4:9",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15395:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15395:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15395:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15426:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15429:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15419:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15419:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15419:15:9"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "15313:127:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15477:95:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15494:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15501:3:9",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15506:10:9",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "15497:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15497:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15487:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15487:31:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15487:31:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15534:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15537:4:9",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15527:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15527:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15527:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15558:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15561:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15551:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15551:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15551:15:9"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "15445:127:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15609:95:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15626:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15633:3:9",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15638:10:9",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "15629:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15629:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15619:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15619:31:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15619:31:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15666:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15669:4:9",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15659:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15659:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15659:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15690:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15693:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15683:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15683:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15683:15:9"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "15577:127:9"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        let _3 := 0x20\n        if gt(add(add(_2, shl(5, length)), _3), dataEnd) { revert(0, 0) }\n        value0 := add(_2, _3)\n        value1 := length\n        let offset_1 := calldataload(add(headStart, _3))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let _4 := add(headStart, offset_1)\n        if iszero(slt(add(_4, 0x1f), dataEnd)) { revert(0, 0) }\n        let _5 := calldataload(_4)\n        if gt(_5, _1) { panic_error_0x41() }\n        let _6 := shl(5, _5)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_6, 63), not(31)))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _5)\n        dst := add(memPtr, _3)\n        let src := add(_4, _3)\n        if gt(add(add(_4, _6), _3), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _5) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _3)\n            src := add(src, _3)\n        }\n        value2 := memPtr\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_04bb66460939ea194d503df110190e52906b18189ab5ed1ca23a15911a5a9a66__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"ERC20Token: given blackListAddre\")\n        mstore(add(headStart, 96), \"ss is not in blacklist\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2a144a05822be9f779d4fcf3ca1c70749eeb283966c5c3e4740758598fce48f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"ERC20Token: Incorrect parameter \")\n        mstore(add(headStart, 96), \"length.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Failed to send Ether\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7594518c2adef8dbe8aa15243e44996b5dad04116faec001e090d48a91777191__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20Token: Amount can not be Ze\")\n        mstore(add(headStart, 96), \"ro.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_84cdcd64eef2869c5caf00f30e3e342b13063b763240f35343b92941e22d83ea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20Token: This address is in b\")\n        mstore(add(headStart, 96), \"lacklist\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9b7905bbeb56fcea347de262147601586ae74c0c2eddae91ccbea0fa9259d1e1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"ERC20Token: given blackListAddre\")\n        mstore(add(headStart, 96), \"ss is already blacklisted\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a40529ab6330f2ab371d8f2c5590676b5587bf17188248b6233c4769c4d5b37d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 67)\n        mstore(add(headStart, 64), \"ERC20Token: newTokenPrice is can\")\n        mstore(add(headStart, 96), \" not be same as current tokenPri\")\n        mstore(add(headStart, 128), \"ce.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_b1059aca452045852e0556aeb5bc8fed5168c6a51683af6a476ea395e51c7486__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"ERC20Token: blackListAddress can\")\n        mstore(add(headStart, 96), \" not be Zero Address.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b57838eccd8599dfbbe2178cdb450aec649e33a5486a20878b09db101c6230a5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"ERC20Token: Cannot mint ERC20Tok\")\n        mstore(add(headStart, 96), \"en to Zero Address.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cfef99352760e86c76a1fc4522d10219b9aac9f229b236fa6e44be584cde32e5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC20Token: Caller address is bl\")\n        mstore(add(headStart, 96), \"acklisted.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d996262e27ec4299be34f8d22baa37bd148c95e193553c255fd0834e07b3b928__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC20Token: Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f787a0648df480862a8181849fa54fb00c232e114b8288cbe998ffcda0c9f77d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20Token: Insufficient balance\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint16(value) -> ret\n    {\n        let _1 := 0xffff\n        let value_1 := and(value, _1)\n        if eq(value_1, _1) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "436:5451:7:-:0;;;933:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:13:2;;1022:4:7;;1028:6;;2044:13:2;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2067:17:2;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;996:7:1;:15;;-1:-1:-1;;996:15:1;;;-1:-1:-1;936:32:0;719:10:5;936:18:0;:32::i;:::-;1051:10:7::1;:24:::0;-1:-1:-1;436:5451:7;;-1:-1:-1;436:5451:7;2433:187:0;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;2525:6;2541:17;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;436:5451:7:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;436:5451:7;;;-1:-1:-1;436:5451:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:9;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:9;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:9;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:9:o;904:623::-;1012:6;1020;1028;1081:2;1069:9;1060:7;1056:23;1052:32;1049:52;;;1097:1;1094;1087:12;1049:52;1124:16;;-1:-1:-1;;;;;1189:14:9;;;1186:34;;;1216:1;1213;1206:12;1186:34;1239:61;1292:7;1283:6;1272:9;1268:22;1239:61;:::i;:::-;1229:71;;1346:2;1335:9;1331:18;1325:25;1309:41;;1375:2;1365:8;1362:16;1359:36;;;1391:1;1388;1381:12;1359:36;;1414:63;1469:7;1458:8;1447:9;1443:24;1414:63;:::i;:::-;1404:73;;;1517:2;1506:9;1502:18;1496:25;1486:35;;904:623;;;;;:::o;1532:380::-;1611:1;1607:12;;;;1654;;;1675:61;;1729:4;1721:6;1717:17;1707:27;;1675:61;1782:2;1774:6;1771:14;1751:18;1748:38;1745:161;;;1828:10;1823:3;1819:20;1816:1;1809:31;1863:4;1860:1;1853:15;1891:4;1888:1;1881:15;1745:161;;1532:380;;;:::o;1917:127::-;1978:10;1973:3;1969:20;1966:1;1959:31;2009:4;2006:1;1999:15;2033:4;2030:1;2023:15;1917:127;436:5451:7;;;;;;",
  "deployedSourceMap": "436:5451:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;-1:-1:-1;4433:197:2;;;;;:::i;:::-;;:::i;:::-;;;3898:14:9;;3891:22;3873:41;;3861:2;3846:18;4433:197:2;3733:187:9;3244:106:2;;;;;;;;;;-1:-1:-1;3331:12:2;;3244:106;;;14195:25:9;;;14183:2;14168:18;3244:106:2;14049:177:9;5192:286:2;;;;;;;;;;-1:-1:-1;5192:286:2;;;;;:::i;:::-;;:::i;3093:91::-;;;;;;;;;;-1:-1:-1;3093:91:2;;3175:2;14373:36:9;;14361:2;14346:18;3093:91:2;14231:184:9;5873:234:2;;;;;;;;;;-1:-1:-1;5873:234:2;;;;;:::i;:::-;;:::i;3073:318:7:-;;;;;;;;;;;;;:::i;:::-;;5811:74;;;;;;;;;;;;;:::i;1373:523::-;;;;;;:::i;:::-;;:::i;3669:370::-;;;;;;;;;;-1:-1:-1;3669:370:7;;;;;:::i;:::-;;:::i;256:42:6:-;;;;;;;;;;-1:-1:-1;256:42:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;4337:371:7;;;;;;;;;;-1:-1:-1;4337:371:7;;;;;:::i;:::-;;:::i;1615:84:1:-;;;;;;;;;;-1:-1:-1;1685:7:1;;;;1615:84;;2318:513:7;;;;;;;;;;-1:-1:-1;2318:513:7;;;;;:::i;:::-;;:::i;4946:284::-;;;;;;;;;;-1:-1:-1;4946:284:7;;;;;:::i;:::-;;:::i;5407:116::-;;;;;;;;;;-1:-1:-1;5495:21:7;5407:116;;3408:125:2;;;;;;;;;;-1:-1:-1;3408:125:2;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:2;3482:7;3508:18;;;;;;;;;;;;3408:125;1831:101:0;;;;;;;;;;;;;:::i;572:25:7:-;;;;;;;;;;;;;;;;5631:70;;;;;;;;;;;;;:::i;1201:85:0:-;;;;;;;;;;-1:-1:-1;1273:6:0;;;;;-1:-1:-1;;;;;1273:6:0;1201:85;;-1:-1:-1;;;;;3194:32:9;;;3176:51;;3164:2;3149:18;1201:85:0;3030:203:9;2367:102:2;;;;;;;;;;;;;:::i;6594:427::-;;;;;;;;;;-1:-1:-1;6594:427:2;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;;;;;-1:-1:-1;3729:189:2;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;;;;;-1:-1:-1;3976:149:2;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;2156:98:2:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:5;4570:32:2;719:10:5;4586:7:2;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:2;;4433:197;-1:-1:-1;;;4433:197:2:o;5192:286::-;5319:4;719:10:5;5375:38:2;5391:4;719:10:5;5406:6:2;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:2;;5192:286;-1:-1:-1;;;;5192:286:2:o;5873:234::-;5961:4;719:10:5;6015:64:2;719:10:5;6031:7:2;6068:10;6040:25;719:10:5;6031:7:2;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;3073:318:7:-;1094:13:0;:11;:13::i;:::-;3162:1:7::1;5495:21:::0;3139:24:::1;3131:69;;;::::0;-1:-1:-1;;;3131:69:7;;12722:2:9;3131:69:7::1;::::0;::::1;12704:21:9::0;;;12741:18;;;12734:30;12800:34;12780:18;;;12773:62;12852:18;;3131:69:7::1;;;;;;;;;3240:10;3210:19;3240:10:::0;3273:30:::1;5495:21:::0;3273:30:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;::::1;;;;;;3261:42;;3321:4;3313:37;;;::::0;-1:-1:-1;;;3313:37:7;;7888:2:9;3313:37:7::1;::::0;::::1;7870:21:9::0;7927:2;7907:18;;;7900:30;-1:-1:-1;;;7946:18:9;;;7939:50;8006:18;;3313:37:7::1;7686:344:9::0;3313:37:7::1;3365:19;::::0;-1:-1:-1;;;;;3194:32:9;;3176:51;;3365:19:7::1;::::0;3164:2:9;3149:18;3365:19:7::1;;;;;;;3121:270;;3073:318::o:0;5811:74::-;1094:13:0;:11;:13::i;:::-;5868:10:7::1;:8;:10::i;:::-;5811:74::o:0;1373:523::-;1239:19:1;:17;:19::i;:::-;1478:2:7::1;2038:23:6;2055:5;2038:16;:23::i;:::-;2037:24;2029:77;;;::::0;-1:-1:-1;;;2029:77:6;;8986:2:9;2029:77:6::1;::::0;::::1;8968:21:9::0;9025:2;9005:18;;;8998:30;9064:34;9044:18;;;9037:62;-1:-1:-1;;;9115:18:9;;;9108:38;9163:19;;2029:77:6::1;8784:404:9::0;2029:77:6::1;-1:-1:-1::0;;;;;1500:18:7;::::2;1492:82;;;::::0;-1:-1:-1;;;1492:82:7;;11080:2:9;1492:82:7::2;::::0;::::2;11062:21:9::0;11119:2;11099:18;;;11092:30;11158:34;11138:18;;;11131:62;-1:-1:-1;;;11209:18:9;;;11202:49;11268:19;;1492:82:7::2;10878:415:9::0;1492:82:7::2;1593:28;1610:10;1593:16;:28::i;:::-;1592:29;1584:84;;;::::0;-1:-1:-1;;;1584:84:7;;12311:2:9;1584:84:7::2;::::0;::::2;12293:21:9::0;12350:2;12330:18;;;12323:30;12389:34;12369:18;;;12362:62;-1:-1:-1;;;12440:18:9;;;12433:40;12490:19;;1584:84:7::2;12109:406:9::0;1584:84:7::2;1686:11:::0;1678:59:::2;;;::::0;-1:-1:-1;;;1678:59:7;;8582:2:9;1678:59:7::2;::::0;::::2;8564:21:9::0;8621:2;8601:18;;;8594:30;8660:34;8640:18;;;8633:62;-1:-1:-1;;;8711:18:9;;;8704:33;8754:19;;1678:59:7::2;8380:399:9::0;1678:59:7::2;1781:6;1768:10;;:19;;;;:::i;:::-;1755:9;:32;;1747:77;;;::::0;-1:-1:-1;;;1747:77:7;;13083:2:9;1747:77:7::2;::::0;::::2;13065:21:9::0;13122:2;13102:18;;;13095:30;13161:34;13141:18;;;13134:62;-1:-1:-1;;;13212:18:9;;;13205:31;13253:19;;1747:77:7::2;12881:397:9::0;1747:77:7::2;1834:17;1840:2;1844:6;1834:5;:17::i;:::-;1866:23;::::0;;-1:-1:-1;;;;;3646:32:9;;3628:51;;3710:2;3695:18;;3688:34;;;1866:23:7::2;::::0;3601:18:9;1866:23:7::2;;;;;;;1268:1:1::1;1373:523:7::0;;:::o;3669:370::-;1094:13:0;:11;:13::i;:::-;1239:19:1::1;:17;:19::i;:::-;-1:-1:-1::0;;;;;3779:32:7;::::2;3771:98;;;;-1:-1:-1::0;;;3771:98:7::2;;;;;;;:::i;:::-;3888:34;3905:16;3888;:34::i;:::-;3887:35;3879:105;;;::::0;-1:-1:-1;;;3879:105:7;;9756:2:9;3879:105:7::2;::::0;::::2;9738:21:9::0;9795:2;9775:18;;;9768:30;9834:34;9814:18;;;9807:62;9905:27;9885:18;;;9878:55;9950:19;;3879:105:7::2;9554:421:9::0;3879:105:7::2;3994:33;4010:16;3994:15;:33::i;:::-;;3669:370:::0;:::o;4337:371::-;1094:13:0;:11;:13::i;:::-;1239:19:1::1;:17;:19::i;:::-;-1:-1:-1::0;;;;;4452:32:7;::::2;4444:98;;;;-1:-1:-1::0;;;4444:98:7::2;;;;;;;:::i;:::-;4560:34;4577:16;4560;:34::i;:::-;4552:101;;;::::0;-1:-1:-1;;;4552:101:7;;4729:2:9;4552:101:7::2;::::0;::::2;4711:21:9::0;4768:2;4748:18;;;4741:30;4807:34;4787:18;;;4780:62;-1:-1:-1;;;4858:18:9;;;4851:52;4920:19;;4552:101:7::2;4527:418:9::0;4552:101:7::2;4663:38;4684:16;4663:20;:38::i;2318:513::-:0;1239:19:1;:17;:19::i;:::-;1094:13:0::1;:11;:13::i;:::-;2466::7::0;;2448:31;::::2;2440:83;;;::::0;-1:-1:-1;;;2440:83:7;;6715:2:9;2440:83:7::2;::::0;::::2;6697:21:9::0;6754:2;6734:18;;;6727:30;6793:34;6773:18;;;6766:62;-1:-1:-1;;;6844:18:9;;;6837:37;6891:19;;2440:83:7::2;6513:403:9::0;2440:83:7::2;2537:8;2533:292;2551:18;::::0;::::2;::::0;-1:-1:-1;2533:292:7::2;;;2595:28;2612:7;;2620:1;2612:10;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2595:16;:28::i;:::-;2594:29;2593:72;;;;-1:-1:-1::0;679:1:7::2;2637:7:::0;;:10:::2;::::0;::::2;::::0;;::::2;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2629:35:7::2;;;2593:72;:92;;;;;2670:6;2677:1;2670:9;;;;;;;;;;:::i;:::-;;;;;;;2683:1;2670:14;;2593:92;2589:216;;;2705:28;2711:7;;2719:1;2711:10;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2723:6;2730:1;2723:9;;;;;;;;;;:::i;:::-;;;;;;;2705:5;:28::i;:::-;2756:34;2768:7;;2776:1;2768:10;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2780:6;2787:1;2780:9;;;;;;;;;;:::i;:::-;;;;;;;2756:34;;;;;;-1:-1:-1::0;;;;;3646:32:9;;;;3628:51;;3710:2;3695:18;;3688:34;3616:2;3601:18;;3454:274;2756:34:7::2;;;;;;;;2589:216;2571:3:::0;::::2;::::0;::::2;:::i;:::-;;;;2533:292;;;;2318:513:::0;;;:::o;4946:284::-;1094:13:0;:11;:13::i;:::-;5055::7::1;5041:10;;:27;;5033:107;;;::::0;-1:-1:-1;;;5033:107:7;;10182:2:9;5033:107:7::1;::::0;::::1;10164:21:9::0;10221:2;10201:18;;;10194:30;10260:34;10240:18;;;10233:62;10331:34;10311:18;;;10304:62;-1:-1:-1;;;10382:19:9;;;10375:34;10426:19;;5033:107:7::1;9980:471:9::0;5033:107:7::1;5150:10;:26:::0;;;5191:32:::1;::::0;14195:25:9;;;5191:32:7::1;::::0;14183:2:9;14168:18;5191:32:7::1;;;;;;;4946:284:::0;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;5631:70:7:-:0;1094:13:0;:11;:13::i;:::-;5686:8:7::1;:6;:8::i;2367:102:2:-:0;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:5;6687:4:2;6768:25;719:10:5;6785:7:2;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:2;;13485:2:9;6803:85:2;;;13467:21:9;13524:2;13504:18;;;13497:30;13563:34;13543:18;;;13536:62;-1:-1:-1;;;13614:18:9;;;13607:35;13659:19;;6803:85:2;13283:401:9;6803:85:2;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:5;3862:28:2;719:10:5;3879:2:2;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:2;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;5905:2:9;2161:73:0::1;::::0;::::1;5887:21:9::0;5944:2;5924:18;;;5917:30;5983:34;5963:18;;;5956:62;-1:-1:-1;;;6034:18:9;;;6027:36;6080:19;;2161:73:0::1;5703:402:9::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;10110:370:2:-;-1:-1:-1;;;;;10241:19:2;;10233:68;;;;-1:-1:-1;;;10233:68:2;;11906:2:9;10233:68:2;;;11888:21:9;11945:2;11925:18;;;11918:30;11984:34;11964:18;;;11957:62;-1:-1:-1;;;12035:18:9;;;12028:34;12079:19;;10233:68:2;11704:400:9;10233:68:2;-1:-1:-1;;;;;10319:21:2;;10311:68;;;;-1:-1:-1;;;10311:68:2;;6312:2:9;10311:68:2;;;6294:21:9;6351:2;6331:18;;;6324:30;6390:34;6370:18;;;6363:62;-1:-1:-1;;;6441:18:9;;;6434:32;6483:19;;10311:68:2;6110:398:9;10311:68:2;-1:-1:-1;;;;;10390:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;14195:25:9;;;10441:32:2;;14168:18:9;10441:32:2;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;-1:-1:-1;;10957:16:2;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:2;;7123:2:9;11010:68:2;;;7105:21:9;7162:2;7142:18;;;7135:30;7201:31;7181:18;;;7174:59;7250:18;;11010:68:2;6921:353:9;11010:68:2;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;7475:651::-;-1:-1:-1;;;;;7601:18:2;;7593:68;;;;-1:-1:-1;;;7593:68:2;;11500:2:9;7593:68:2;;;11482:21:9;11539:2;11519:18;;;11512:30;11578:34;11558:18;;;11551:62;-1:-1:-1;;;11629:18:9;;;11622:35;11674:19;;7593:68:2;11298:401:9;7593:68:2;-1:-1:-1;;;;;7679:16:2;;7671:64;;;;-1:-1:-1;;;7671:64:2;;5152:2:9;7671:64:2;;;5134:21:9;5191:2;5171:18;;;5164:30;5230:34;5210:18;;;5203:62;-1:-1:-1;;;5281:18:9;;;5274:33;5324:19;;7671:64:2;4950:399:9;7671:64:2;-1:-1:-1;;;;;7817:15:2;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:2;;7481:2:9;7842:72:2;;;7463:21:9;7520:2;7500:18;;;7493:30;7559:34;7539:18;;;7532:62;-1:-1:-1;;;7610:18:9;;;7603:36;7656:19;;7842:72:2;7279:402:9;7842:72:2;-1:-1:-1;;;;;7948:15:2;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:2;8054:4;-1:-1:-1;;;;;8045:26:2;;8064:6;8045:26;;;;14195:25:9;;14183:2;14168:18;;14049:177;8045:26:2;;;;;;;;8082:37;11786:121;1359:130:0;1273:6;;-1:-1:-1;;;;;1273:6:0;;;;;719:10:5;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;9395:2:9;1414:68:0;;;9377:21:9;;;9414:18;;;9407:30;9473:34;9453:18;;;9446:62;9525:18;;1414:68:0;9193:356:9;2433:117:1;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:1::1;::::0;;2521:22:::1;719:10:5::0;2530:12:1::1;2521:22;::::0;-1:-1:-1;;;;;3194:32:9;;;3176:51;;3164:2;3149:18;2521:22:1::1;;;;;;;2433:117::o:0;1767:106::-;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:1;;8237:2:9;1828:38:1;;;8219:21:9;8276:2;8256:18;;;8249:30;-1:-1:-1;;;8295:18:9;;;8288:46;8351:18;;1828:38:1;8035:340:9;1706:112:6;-1:-1:-1;;;;;1795:16:6;1773:4;1795:16;;;:9;:16;;;;;;;;;1706:112::o;8402:389:2:-;-1:-1:-1;;;;;8485:21:2;;8477:65;;;;-1:-1:-1;;;8477:65:2;;13891:2:9;8477:65:2;;;13873:21:9;13930:2;13910:18;;;13903:30;13969:33;13949:18;;;13942:61;14020:18;;8477:65:2;13689:355:9;8477:65:2;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8645:18:2;;:9;:18;;;;;;;;;;:28;;8667:6;;8645:9;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:2;;14195:25:9;;;-1:-1:-1;;;;;8688:37:2;;;8705:1;;8688:37;;14183:2:9;14168:18;8688:37:2;;;;;;;3994:33:7::2;3669:370:::0;:::o;806:168:6:-;-1:-1:-1;;;;;887:15:6;;871:4;887:15;;;:9;:15;;;;;;;;:22;;-1:-1:-1;;887:22:6;905:4;887:22;;;924;3176:51:9;;;871:4:6;;924:22;;3149:18:9;924:22:6;;;;;;;;-1:-1:-1;963:4:6;;806:168;-1:-1:-1;806:168:6:o;1217:210::-;-1:-1:-1;;;;;1303:15:6;;1287:4;1303:15;;;:9;:15;;;;;;;;:23;;-1:-1:-1;;1303:23:6;;;1373:26;3176:51:9;;;1287:4:6;;1373:26;;3149:18:9;1373:26:6;3030:203:9;2433:187:0;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;2525:6;2541:17;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;2186:115:1:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:1::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;719:10:5::0;;640:96;1945:106:1;1685:7;;;;2003:41;;;;-1:-1:-1;;;2003:41:1;;5556:2:9;2003:41:1;;;5538:21:9;5595:2;5575:18;;;5568:30;-1:-1:-1;;;5614:18:9;;;5607:50;5674:18;;2003:41:1;5354:344:9;14:173;82:20;;-1:-1:-1;;;;;131:31:9;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:9:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:9:o;1240:1600::-;1360:6;1368;1376;1429:2;1417:9;1408:7;1404:23;1400:32;1397:52;;;1445:1;1442;1435:12;1397:52;1485:9;1472:23;1514:18;1555:2;1547:6;1544:14;1541:34;;;1571:1;1568;1561:12;1541:34;1609:6;1598:9;1594:22;1584:32;;1654:7;1647:4;1643:2;1639:13;1635:27;1625:55;;1676:1;1673;1666:12;1625:55;1716:2;1703:16;1742:2;1734:6;1731:14;1728:34;;;1758:1;1755;1748:12;1728:34;1781:4;1834:7;1829:2;1819:6;1816:1;1812:14;1808:2;1804:23;1800:32;1797:45;1794:65;;;1855:1;1852;1845:12;1794:65;1886:2;1882;1878:11;1868:21;;1908:6;1898:16;;1967:2;1956:9;1952:18;1939:32;1923:48;;1996:2;1986:8;1983:16;1980:36;;;2012:1;2009;2002:12;1980:36;2050:8;2039:9;2035:24;2025:34;;2097:7;2090:4;2086:2;2082:13;2078:27;2068:55;;2119:1;2116;2109:12;2068:55;2155:2;2142:16;2132:26;;2177:2;2173;2170:10;2167:36;;;2183:18;;:::i;:::-;2229:2;2226:1;2222:10;2261:2;2255:9;2324:2;2320:7;2315:2;2311;2307:11;2303:25;2295:6;2291:38;2379:6;2367:10;2364:22;2359:2;2347:10;2344:18;2341:46;2338:72;;;2390:18;;:::i;:::-;2426:2;2419:22;2476:18;;;2510:15;;;;-1:-1:-1;2545:11:9;;;2575;;;2571:20;;2568:33;-1:-1:-1;2565:53:9;;;2614:1;2611;2604:12;2565:53;2636:1;2627:10;;2646:163;2660:2;2657:1;2654:9;2646:163;;;2717:17;;2705:30;;2678:1;2671:9;;;;;2755:12;;;;2787;;2646:163;;;2650:3;2828:6;2818:16;;;;;;;;1240:1600;;;;;:::o;2845:180::-;2904:6;2957:2;2945:9;2936:7;2932:23;2928:32;2925:52;;;2973:1;2970;2963:12;2925:52;-1:-1:-1;2996:23:9;;2845:180;-1:-1:-1;2845:180:9:o;3925:597::-;4037:4;4066:2;4095;4084:9;4077:21;4127:6;4121:13;4170:6;4165:2;4154:9;4150:18;4143:34;4195:1;4205:140;4219:6;4216:1;4213:13;4205:140;;;4314:14;;;4310:23;;4304:30;4280:17;;;4299:2;4276:26;4269:66;4234:10;;4205:140;;;4363:6;4360:1;4357:13;4354:91;;;4433:1;4428:2;4419:6;4408:9;4404:22;4400:31;4393:42;4354:91;-1:-1:-1;4506:2:9;4485:15;-1:-1:-1;;4481:29:9;4466:45;;;;4513:2;4462:54;;3925:597;-1:-1:-1;;;3925:597:9:o;10456:417::-;10658:2;10640:21;;;10697:2;10677:18;;;10670:30;10736:34;10731:2;10716:18;;10709:62;-1:-1:-1;;;10802:2:9;10787:18;;10780:51;10863:3;10848:19;;10456:417::o;14420:128::-;14460:3;14491:1;14487:6;14484:1;14481:13;14478:39;;;14497:18;;:::i;:::-;-1:-1:-1;14533:9:9;;14420:128::o;14553:168::-;14593:7;14659:1;14655;14651:6;14647:14;14644:1;14641:21;14636:1;14629:9;14622:17;14618:45;14615:71;;;14666:18;;:::i;:::-;-1:-1:-1;14706:9:9;;14553:168::o;14726:380::-;14805:1;14801:12;;;;14848;;;14869:61;;14923:4;14915:6;14911:17;14901:27;;14869:61;14976:2;14968:6;14965:14;14945:18;14942:38;14939:161;;;15022:10;15017:3;15013:20;15010:1;15003:31;15057:4;15054:1;15047:15;15085:4;15082:1;15075:15;14939:161;;14726:380;;;:::o;15111:197::-;15149:3;15177:6;15218:2;15211:5;15207:14;15245:2;15236:7;15233:15;15230:41;;;15251:18;;:::i;:::-;15300:1;15287:15;;15111:197;-1:-1:-1;;;15111:197:9:o;15313:127::-;15374:10;15369:3;15365:20;15362:1;15355:31;15405:4;15402:1;15395:15;15429:4;15426:1;15419:15;15445:127;15506:10;15501:3;15497:20;15494:1;15487:31;15537:4;15534:1;15527:15;15561:4;15558:1;15551:15;15577:127;15638:10;15633:3;15629:20;15626:1;15619:31;15669:4;15666:1;15659:15;15693:4;15690:1;15683:15",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.7;\n\n/**\n* @title A ERC20Token contract\n* @author Systango team\n* @notice Serves as a fungible token\n* @dev Inherits the OpenZepplin ERC20 implentation\n */\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"./IERC20Token.sol\";\nimport \"./BlackList.sol\";\n\ncontract ERC20Token is ERC20, Pausable, Ownable, IERC20Token, BlackList{\n    \n    /**\n     *   @notice Price of ERC20 Token\n     */\n    uint256 public tokenPrice;\n\n    /**\n    * Zero Address\n    */ \n    address constant ZERO_ADDRESS = address(0);\n\n    /**\n     * @dev Sets the values for {name}, {symbol} and {_tokenPrice}\n     * @custom:info The default value of {decimals} is 18\n     * @custom:info name and symbol values are immutable: they can only be set once during construction\n     */\n    constructor(string memory name, string memory symbol,uint256 _tokenPrice) \n        ERC20(name, symbol) \n    {\n        tokenPrice = _tokenPrice;\n    }\n\n    /**\n    * @dev This is the mint function. It is used for minting `amount` ERC20 tokens to the `to` address\n    * @dev Only non-blacklisted user can call this function\n    * @param to The address to be token minted\n    * @param amount Number of the ERC20 tokens to be minted\n    */\n    function mint(address to, uint256 amount) external payable override whenNotPaused whenNotBlackListedUser(to) {\n        require(to != ZERO_ADDRESS, \"ERC20Token: Cannot mint ERC20Token to Zero Address.\");\n        require(!_isBlackListUser(msg.sender), \"ERC20Token: Caller address is blacklisted.\");\n        require(amount != 0, \"ERC20Token: Amount can not be Zero.\");\n        require(msg.value >= tokenPrice * amount,\"ERC20Token: Insufficient balance.\");\n        _mint(to, amount);\n        emit ERC20Minted(to, amount);\n    }\n\n    /**\n    * @notice airDrop is use to put the ERC20 tokens to given addresses\n    * @dev This is the airDrop function. It is used by the owner to airdrop `amount` number of ERC20 tokens to the `account` address respectively.\n    * @dev Only the owner can call this function\n    * @param account The addresses to be airdropped\n    * @param amount The amounts of random tokens to be air dropped respectively\n    */\n     function airDrop(address[] calldata account, uint256[] memory amount) external override whenNotPaused onlyOwner {\n        require(account.length == amount.length, \"ERC20Token: Incorrect parameter length.\");\n        for(uint16 i = 0; i < account.length; i++){\n            if( (!_isBlackListUser(account[i])) && (address(account[i]) != ZERO_ADDRESS) && (amount[i] != 0) ){\n                _mint(account[i], amount[i]);\n                emit ERC20Minted(account[i], amount[i]);\n            }          \n        }\n    }\n\n    /**\n    * @notice withdraw is use to take out all the contract balance into owner account\n    * @dev This function would withdraw all the contract balance into owner's address\n    * @dev Only the owner can call this function\n    */\n    function withdraw() external override onlyOwner {\n        require(getContractBalance() > 0, \"ERC20Token: Insufficient balance\");\n        address payable _to = payable(msg.sender);\n        bool sent = _to.send(getContractBalance());\n        require(sent, \"Failed to send Ether\");\n        emit EthersWithdraw(_to);\n    }\n\n    /**\n    * @notice addToBlackList is use to add the address into blacklist\n    * @dev This function would add an address to the blacklist mapping\n    * @dev Only the owner can call this function\n    * @param blackListAddress The account to be added to blacklist\n    */\n    function addToBlackList(address blackListAddress) external override onlyOwner whenNotPaused {\n        require(blackListAddress != ZERO_ADDRESS, \"ERC20Token: blackListAddress can not be Zero Address.\");\n        require(!_isBlackListUser(blackListAddress), \"ERC20Token: given blackListAddress is already blacklisted\");\n        _addToBlackList(blackListAddress);\n    \n    }\n\n    /**\n     * @notice removeFromBlackList is use to remove the blacklisted user.\n     * @dev This function would remove an address from the blacklist mapping.\n     * @dev Only the owner can call this function.\n     * @param blackListAddress The account to be removed from blacklist.\n     */\n    function removeFromBlackList(address blackListAddress) external override onlyOwner whenNotPaused {\n        require(blackListAddress != ZERO_ADDRESS, \"ERC20Token: blackListAddress can not be Zero Address.\");\n        require(_isBlackListUser(blackListAddress), \"ERC20Token: given blackListAddress is not in blacklist\");\n        _removeFromBlackList(blackListAddress);\n    }\n\n    /**\n     * @notice updateTokenPrice is use to update the token price\n     * @param newTokenPrice is updated token price in wei\n     * @dev Returns the contract balance.\n     * @dev Only the owner can call this function.\n     */\n    function updateTokenPrice(uint256 newTokenPrice) external override onlyOwner {\n        require(tokenPrice != newTokenPrice, \"ERC20Token: newTokenPrice is can not be same as current tokenPrice.\");\n        tokenPrice = newTokenPrice;\n        emit TokenPriceUpdated(newTokenPrice);\n    }\n\n    /**\n     * @notice getContractBalance is use to check contract balance\n     * @dev Returns the contract balance\n     * @return balance Contract balance in wei\n     */\n    function getContractBalance() public view returns (uint256 balance) {\n        balance = address(this).balance;\n    }\n\n    /**\n     * @dev to pause the contract.\n     * @dev Only the owner can call this function.\n     */\n    function pause() external override onlyOwner {\n        _pause();\n    }\n\n    /**\n     * @dev to unpause the contract.\n     * @dev Only the owner can call this function.\n     */\n    function unpause() external override onlyOwner {\n        _unpause();\n    }\n}\n",
  "sourcePath": "/home/ubox141/Desktop/Blockchain Work'/ERC20-BoilerPlate/contracts/ERC20Token.sol",
  "ast": {
    "absolutePath": "project:/contracts/ERC20Token.sol",
    "exportedSymbols": {
      "BlackList": [
        1025
      ],
      "Context": [
        931
      ],
      "ERC20": [
        806
      ],
      "ERC20Token": [
        1376
      ],
      "IERC20": [
        884
      ],
      "IERC20Metadata": [
        909
      ],
      "IERC20Token": [
        1445
      ],
      "Ownable": [
        112
      ],
      "Pausable": [
        220
      ]
    },
    "id": 1377,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1027,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 1028,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1377,
        "sourceUnit": 807,
        "src": "215:55:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 1029,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1377,
        "sourceUnit": 221,
        "src": "271:55:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1030,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1377,
        "sourceUnit": 113,
        "src": "327:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/IERC20Token.sol",
        "file": "./IERC20Token.sol",
        "id": 1031,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1377,
        "sourceUnit": 1446,
        "src": "381:27:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/BlackList.sol",
        "file": "./BlackList.sol",
        "id": 1032,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1377,
        "sourceUnit": 1026,
        "src": "409:25:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1033,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 806,
              "src": "459:5:7"
            },
            "id": 1034,
            "nodeType": "InheritanceSpecifier",
            "src": "459:5:7"
          },
          {
            "baseName": {
              "id": 1035,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 220,
              "src": "466:8:7"
            },
            "id": 1036,
            "nodeType": "InheritanceSpecifier",
            "src": "466:8:7"
          },
          {
            "baseName": {
              "id": 1037,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "476:7:7"
            },
            "id": 1038,
            "nodeType": "InheritanceSpecifier",
            "src": "476:7:7"
          },
          {
            "baseName": {
              "id": 1039,
              "name": "IERC20Token",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1445,
              "src": "485:11:7"
            },
            "id": 1040,
            "nodeType": "InheritanceSpecifier",
            "src": "485:11:7"
          },
          {
            "baseName": {
              "id": 1041,
              "name": "BlackList",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1025,
              "src": "498:9:7"
            },
            "id": 1042,
            "nodeType": "InheritanceSpecifier",
            "src": "498:9:7"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1376,
        "linearizedBaseContracts": [
          1376,
          1025,
          1445,
          112,
          220,
          806,
          909,
          884,
          931
        ],
        "name": "ERC20Token",
        "nameLocation": "445:10:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 1043,
              "nodeType": "StructuredDocumentation",
              "src": "518:49:7",
              "text": "   @notice Price of ERC20 Token"
            },
            "functionSelector": "7ff9b596",
            "id": 1045,
            "mutability": "mutable",
            "name": "tokenPrice",
            "nameLocation": "587:10:7",
            "nodeType": "VariableDeclaration",
            "scope": 1376,
            "src": "572:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1044,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "572:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 1046,
              "nodeType": "StructuredDocumentation",
              "src": "604:29:7",
              "text": " Zero Address"
            },
            "id": 1052,
            "mutability": "constant",
            "name": "ZERO_ADDRESS",
            "nameLocation": "656:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 1376,
            "src": "639:42:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1047,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "639:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "30",
                  "id": 1050,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "679:1:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 1049,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "671:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 1048,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "671:7:7",
                  "typeDescriptions": {}
                }
              },
              "id": 1051,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "671:10:7",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1070,
              "nodeType": "Block",
              "src": "1041:41:7",
              "statements": [
                {
                  "expression": {
                    "id": 1068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1066,
                      "name": "tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1045,
                      "src": "1051:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1067,
                      "name": "_tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1059,
                      "src": "1064:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1051:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1069,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:24:7"
                }
              ]
            },
            "documentation": {
              "id": 1053,
              "nodeType": "StructuredDocumentation",
              "src": "688:240:7",
              "text": " @dev Sets the values for {name}, {symbol} and {_tokenPrice}\n @custom:info The default value of {decimals} is 18\n @custom:info name and symbol values are immutable: they can only be set once during construction"
            },
            "id": 1071,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1062,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1055,
                    "src": "1022:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 1063,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1057,
                    "src": "1028:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1064,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1061,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 806,
                  "src": "1016:5:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1016:19:7"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1055,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "959:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1071,
                  "src": "945:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1054,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "945:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1057,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "979:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1071,
                  "src": "965:20:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1056,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1059,
                  "mutability": "mutable",
                  "name": "_tokenPrice",
                  "nameLocation": "994:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1071,
                  "src": "986:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1058,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "986:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "944:62:7"
            },
            "returnParameters": {
              "id": 1065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1041:0:7"
            },
            "scope": 1376,
            "src": "933:149:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1404
            ],
            "body": {
              "id": 1128,
              "nodeType": "Block",
              "src": "1482:414:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1086,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1074,
                          "src": "1500:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1087,
                          "name": "ZERO_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1052,
                          "src": "1506:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1500:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a2043616e6e6f74206d696e74204552433230546f6b656e20746f205a65726f20416464726573732e",
                        "id": 1089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1520:53:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b57838eccd8599dfbbe2178cdb450aec649e33a5486a20878b09db101c6230a5",
                          "typeString": "literal_string \"ERC20Token: Cannot mint ERC20Token to Zero Address.\""
                        },
                        "value": "ERC20Token: Cannot mint ERC20Token to Zero Address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b57838eccd8599dfbbe2178cdb450aec649e33a5486a20878b09db101c6230a5",
                          "typeString": "literal_string \"ERC20Token: Cannot mint ERC20Token to Zero Address.\""
                        }
                      ],
                      "id": 1085,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1492:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1492:82:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1091,
                  "nodeType": "ExpressionStatement",
                  "src": "1492:82:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1592:29:7",
                        "subExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1094,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1610:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1610:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1093,
                            "name": "_isBlackListUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1009,
                            "src": "1593:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) returns (bool)"
                            }
                          },
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1593:28:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a2043616c6c6572206164647265737320697320626c61636b6c69737465642e",
                        "id": 1098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1623:44:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cfef99352760e86c76a1fc4522d10219b9aac9f229b236fa6e44be584cde32e5",
                          "typeString": "literal_string \"ERC20Token: Caller address is blacklisted.\""
                        },
                        "value": "ERC20Token: Caller address is blacklisted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cfef99352760e86c76a1fc4522d10219b9aac9f229b236fa6e44be584cde32e5",
                          "typeString": "literal_string \"ERC20Token: Caller address is blacklisted.\""
                        }
                      ],
                      "id": 1092,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1584:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1584:84:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1100,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:84:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1102,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1076,
                          "src": "1686:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1696:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1686:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a20416d6f756e742063616e206e6f74206265205a65726f2e",
                        "id": 1105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1699:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7594518c2adef8dbe8aa15243e44996b5dad04116faec001e090d48a91777191",
                          "typeString": "literal_string \"ERC20Token: Amount can not be Zero.\""
                        },
                        "value": "ERC20Token: Amount can not be Zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7594518c2adef8dbe8aa15243e44996b5dad04116faec001e090d48a91777191",
                          "typeString": "literal_string \"ERC20Token: Amount can not be Zero.\""
                        }
                      ],
                      "id": 1101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1678:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1678:59:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1107,
                  "nodeType": "ExpressionStatement",
                  "src": "1678:59:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1109,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1755:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1755:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1111,
                            "name": "tokenPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1045,
                            "src": "1768:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1112,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1076,
                            "src": "1781:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1768:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1755:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a20496e73756666696369656e742062616c616e63652e",
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1788:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f787a0648df480862a8181849fa54fb00c232e114b8288cbe998ffcda0c9f77d",
                          "typeString": "literal_string \"ERC20Token: Insufficient balance.\""
                        },
                        "value": "ERC20Token: Insufficient balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f787a0648df480862a8181849fa54fb00c232e114b8288cbe998ffcda0c9f77d",
                          "typeString": "literal_string \"ERC20Token: Insufficient balance.\""
                        }
                      ],
                      "id": 1108,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1747:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1747:77:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1117,
                  "nodeType": "ExpressionStatement",
                  "src": "1747:77:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1119,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1074,
                        "src": "1840:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1120,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1076,
                        "src": "1844:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1118,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 623,
                      "src": "1834:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1834:17:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1122,
                  "nodeType": "ExpressionStatement",
                  "src": "1834:17:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1124,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1074,
                        "src": "1878:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1125,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1076,
                        "src": "1882:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1123,
                      "name": "ERC20Minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1386,
                      "src": "1866:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1866:23:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1127,
                  "nodeType": "EmitStatement",
                  "src": "1861:28:7"
                }
              ]
            },
            "documentation": {
              "id": 1072,
              "nodeType": "StructuredDocumentation",
              "src": "1088:280:7",
              "text": " @dev This is the mint function. It is used for minting `amount` ERC20 tokens to the `to` address\n @dev Only non-blacklisted user can call this function\n @param to The address to be token minted\n @param amount Number of the ERC20 tokens to be minted"
            },
            "functionSelector": "40c10f19",
            "id": 1129,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1080,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1079,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "1441:13:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1441:13:7"
              },
              {
                "arguments": [
                  {
                    "id": 1082,
                    "name": "to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1074,
                    "src": "1478:2:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1083,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1081,
                  "name": "whenNotBlackListedUser",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1024,
                  "src": "1455:22:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1455:26:7"
              }
            ],
            "name": "mint",
            "nameLocation": "1382:4:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1078,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1432:8:7"
            },
            "parameters": {
              "id": 1077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1074,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1395:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1129,
                  "src": "1387:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1076,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1407:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1129,
                  "src": "1399:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1075,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1386:28:7"
            },
            "returnParameters": {
              "id": 1084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1482:0:7"
            },
            "scope": 1376,
            "src": "1373:523:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1414
            ],
            "body": {
              "id": 1210,
              "nodeType": "Block",
              "src": "2430:401:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1145,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1133,
                            "src": "2448:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 1146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2448:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1147,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1136,
                            "src": "2466:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 1148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2466:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2448:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a20496e636f727265637420706172616d65746572206c656e6774682e",
                        "id": 1150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2481:41:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a144a05822be9f779d4fcf3ca1c70749eeb283966c5c3e4740758598fce48f2",
                          "typeString": "literal_string \"ERC20Token: Incorrect parameter length.\""
                        },
                        "value": "ERC20Token: Incorrect parameter length."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a144a05822be9f779d4fcf3ca1c70749eeb283966c5c3e4740758598fce48f2",
                          "typeString": "literal_string \"ERC20Token: Incorrect parameter length.\""
                        }
                      ],
                      "id": 1144,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2440:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2440:83:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1152,
                  "nodeType": "ExpressionStatement",
                  "src": "2440:83:7"
                },
                {
                  "body": {
                    "id": 1208,
                    "nodeType": "Block",
                    "src": "2575:250:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "id": 1169,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
                                  "src": "2594:29:7",
                                  "subExpression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 1165,
                                          "name": "account",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1133,
                                          "src": "2612:7:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                            "typeString": "address[] calldata"
                                          }
                                        },
                                        "id": 1167,
                                        "indexExpression": {
                                          "id": 1166,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1154,
                                          "src": "2620:1:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2612:10:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1164,
                                      "name": "_isBlackListUser",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1009,
                                      "src": "2595:16:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                                        "typeString": "function (address) returns (bool)"
                                      }
                                    },
                                    "id": 1168,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2595:28:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 1170,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2593:31:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 1178,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 1173,
                                          "name": "account",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1133,
                                          "src": "2637:7:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                            "typeString": "address[] calldata"
                                          }
                                        },
                                        "id": 1175,
                                        "indexExpression": {
                                          "id": 1174,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1154,
                                          "src": "2645:1:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2637:10:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1172,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2629:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1171,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2629:7:7",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1176,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2629:19:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "id": 1177,
                                    "name": "ZERO_ADDRESS",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1052,
                                    "src": "2652:12:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "2629:35:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 1179,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2628:37:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "2593:72:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1185,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1181,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1136,
                                    "src": "2670:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1183,
                                  "indexExpression": {
                                    "id": 1182,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1154,
                                    "src": "2677:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2670:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1184,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2683:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "2670:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 1186,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2669:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2593:92:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1207,
                        "nodeType": "IfStatement",
                        "src": "2589:216:7",
                        "trueBody": {
                          "id": 1206,
                          "nodeType": "Block",
                          "src": "2687:118:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1189,
                                      "name": "account",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1133,
                                      "src": "2711:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 1191,
                                    "indexExpression": {
                                      "id": 1190,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1154,
                                      "src": "2719:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2711:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1192,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1136,
                                      "src": "2723:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 1194,
                                    "indexExpression": {
                                      "id": 1193,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1154,
                                      "src": "2730:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2723:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1188,
                                  "name": "_mint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 623,
                                  "src": "2705:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 1195,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2705:28:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1196,
                              "nodeType": "ExpressionStatement",
                              "src": "2705:28:7"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1198,
                                      "name": "account",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1133,
                                      "src": "2768:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 1200,
                                    "indexExpression": {
                                      "id": 1199,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1154,
                                      "src": "2776:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2768:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1201,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1136,
                                      "src": "2780:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 1203,
                                    "indexExpression": {
                                      "id": 1202,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1154,
                                      "src": "2787:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2780:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1197,
                                  "name": "ERC20Minted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1386,
                                  "src": "2756:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 1204,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2756:34:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1205,
                              "nodeType": "EmitStatement",
                              "src": "2751:39:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1157,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1154,
                      "src": "2551:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1158,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1133,
                        "src": "2555:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 1159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2555:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2551:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1209,
                  "initializationExpression": {
                    "assignments": [
                      1154
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1154,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2544:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1209,
                        "src": "2537:8:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 1153,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "2537:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1156,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2548:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2537:12:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2571:3:7",
                      "subExpression": {
                        "id": 1161,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1154,
                        "src": "2571:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 1163,
                    "nodeType": "ExpressionStatement",
                    "src": "2571:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "2533:292:7"
                }
              ]
            },
            "documentation": {
              "id": 1130,
              "nodeType": "StructuredDocumentation",
              "src": "1902:410:7",
              "text": " @notice airDrop is use to put the ERC20 tokens to given addresses\n @dev This is the airDrop function. It is used by the owner to airdrop `amount` number of ERC20 tokens to the `account` address respectively.\n @dev Only the owner can call this function\n @param account The addresses to be airdropped\n @param amount The amounts of random tokens to be air dropped respectively"
            },
            "functionSelector": "65216a41",
            "id": 1211,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1140,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1139,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "2406:13:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2406:13:7"
              },
              {
                "id": 1142,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1141,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "2420:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2420:9:7"
              }
            ],
            "name": "airDrop",
            "nameLocation": "2327:7:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1138,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2397:8:7"
            },
            "parameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1133,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2354:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1211,
                  "src": "2335:26:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1131,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2335:7:7",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1132,
                    "nodeType": "ArrayTypeName",
                    "src": "2335:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1136,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2380:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1211,
                  "src": "2363:23:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1134,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2363:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1135,
                    "nodeType": "ArrayTypeName",
                    "src": "2363:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2334:53:7"
            },
            "returnParameters": {
              "id": 1143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2430:0:7"
            },
            "scope": 1376,
            "src": "2318:513:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1418
            ],
            "body": {
              "id": 1251,
              "nodeType": "Block",
              "src": "3121:270:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1219,
                            "name": "getContractBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1353,
                            "src": "3139:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3139:20:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3162:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3139:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a20496e73756666696369656e742062616c616e6365",
                        "id": 1223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3165:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d996262e27ec4299be34f8d22baa37bd148c95e193553c255fd0834e07b3b928",
                          "typeString": "literal_string \"ERC20Token: Insufficient balance\""
                        },
                        "value": "ERC20Token: Insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d996262e27ec4299be34f8d22baa37bd148c95e193553c255fd0834e07b3b928",
                          "typeString": "literal_string \"ERC20Token: Insufficient balance\""
                        }
                      ],
                      "id": 1218,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3131:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3131:69:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1225,
                  "nodeType": "ExpressionStatement",
                  "src": "3131:69:7"
                },
                {
                  "assignments": [
                    1227
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1227,
                      "mutability": "mutable",
                      "name": "_to",
                      "nameLocation": "3226:3:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1251,
                      "src": "3210:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1226,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3210:15:7",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1233,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1230,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3240:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3240:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3232:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 1228,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3232:8:7",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3232:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3210:41:7"
                },
                {
                  "assignments": [
                    1235
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1235,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "3266:4:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1251,
                      "src": "3261:9:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1234,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3261:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1241,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1238,
                          "name": "getContractBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1353,
                          "src": "3282:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3282:20:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1236,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1227,
                        "src": "3273:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "send",
                      "nodeType": "MemberAccess",
                      "src": "3273:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 1240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3273:30:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3261:42:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1243,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1235,
                        "src": "3321:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 1244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3327:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 1242,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3313:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3313:37:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1246,
                  "nodeType": "ExpressionStatement",
                  "src": "3313:37:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1248,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1227,
                        "src": "3380:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1247,
                      "name": "EthersWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1391,
                      "src": "3365:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3365:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1250,
                  "nodeType": "EmitStatement",
                  "src": "3360:24:7"
                }
              ]
            },
            "documentation": {
              "id": 1212,
              "nodeType": "StructuredDocumentation",
              "src": "2837:231:7",
              "text": " @notice withdraw is use to take out all the contract balance into owner account\n @dev This function would withdraw all the contract balance into owner's address\n @dev Only the owner can call this function"
            },
            "functionSelector": "3ccfd60b",
            "id": 1252,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1216,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1215,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "3111:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3111:9:7"
              }
            ],
            "name": "withdraw",
            "nameLocation": "3082:8:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1214,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3102:8:7"
            },
            "parameters": {
              "id": 1213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3090:2:7"
            },
            "returnParameters": {
              "id": 1217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3121:0:7"
            },
            "scope": 1376,
            "src": "3073:318:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1424
            ],
            "body": {
              "id": 1282,
              "nodeType": "Block",
              "src": "3761:278:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1264,
                          "name": "blackListAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1255,
                          "src": "3779:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1265,
                          "name": "ZERO_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1052,
                          "src": "3799:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3779:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a20626c61636b4c697374416464726573732063616e206e6f74206265205a65726f20416464726573732e",
                        "id": 1267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3813:55:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1059aca452045852e0556aeb5bc8fed5168c6a51683af6a476ea395e51c7486",
                          "typeString": "literal_string \"ERC20Token: blackListAddress can not be Zero Address.\""
                        },
                        "value": "ERC20Token: blackListAddress can not be Zero Address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1059aca452045852e0556aeb5bc8fed5168c6a51683af6a476ea395e51c7486",
                          "typeString": "literal_string \"ERC20Token: blackListAddress can not be Zero Address.\""
                        }
                      ],
                      "id": 1263,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3771:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3771:98:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1269,
                  "nodeType": "ExpressionStatement",
                  "src": "3771:98:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3887:35:7",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 1272,
                              "name": "blackListAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1255,
                              "src": "3905:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1271,
                            "name": "_isBlackListUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1009,
                            "src": "3888:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) returns (bool)"
                            }
                          },
                          "id": 1273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3888:34:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a20676976656e20626c61636b4c6973744164647265737320697320616c726561647920626c61636b6c6973746564",
                        "id": 1275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3924:59:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b7905bbeb56fcea347de262147601586ae74c0c2eddae91ccbea0fa9259d1e1",
                          "typeString": "literal_string \"ERC20Token: given blackListAddress is already blacklisted\""
                        },
                        "value": "ERC20Token: given blackListAddress is already blacklisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9b7905bbeb56fcea347de262147601586ae74c0c2eddae91ccbea0fa9259d1e1",
                          "typeString": "literal_string \"ERC20Token: given blackListAddress is already blacklisted\""
                        }
                      ],
                      "id": 1270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3879:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3879:105:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1277,
                  "nodeType": "ExpressionStatement",
                  "src": "3879:105:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1279,
                        "name": "blackListAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1255,
                        "src": "4010:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1278,
                      "name": "_addToBlackList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 970,
                      "src": "3994:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) returns (bool)"
                      }
                    },
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3994:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1281,
                  "nodeType": "ExpressionStatement",
                  "src": "3994:33:7"
                }
              ]
            },
            "documentation": {
              "id": 1253,
              "nodeType": "StructuredDocumentation",
              "src": "3397:267:7",
              "text": " @notice addToBlackList is use to add the address into blacklist\n @dev This function would add an address to the blacklist mapping\n @dev Only the owner can call this function\n @param blackListAddress The account to be added to blacklist"
            },
            "functionSelector": "417c73a7",
            "id": 1283,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1259,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1258,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "3737:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3737:9:7"
              },
              {
                "id": 1261,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1260,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "3747:13:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3747:13:7"
              }
            ],
            "name": "addToBlackList",
            "nameLocation": "3678:14:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1257,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3728:8:7"
            },
            "parameters": {
              "id": 1256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1255,
                  "mutability": "mutable",
                  "name": "blackListAddress",
                  "nameLocation": "3701:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1283,
                  "src": "3693:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3693:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3692:26:7"
            },
            "returnParameters": {
              "id": 1262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3761:0:7"
            },
            "scope": 1376,
            "src": "3669:370:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1430
            ],
            "body": {
              "id": 1312,
              "nodeType": "Block",
              "src": "4434:274:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1295,
                          "name": "blackListAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1286,
                          "src": "4452:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1296,
                          "name": "ZERO_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1052,
                          "src": "4472:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4452:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a20626c61636b4c697374416464726573732063616e206e6f74206265205a65726f20416464726573732e",
                        "id": 1298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4486:55:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1059aca452045852e0556aeb5bc8fed5168c6a51683af6a476ea395e51c7486",
                          "typeString": "literal_string \"ERC20Token: blackListAddress can not be Zero Address.\""
                        },
                        "value": "ERC20Token: blackListAddress can not be Zero Address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1059aca452045852e0556aeb5bc8fed5168c6a51683af6a476ea395e51c7486",
                          "typeString": "literal_string \"ERC20Token: blackListAddress can not be Zero Address.\""
                        }
                      ],
                      "id": 1294,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4444:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4444:98:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1300,
                  "nodeType": "ExpressionStatement",
                  "src": "4444:98:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1303,
                            "name": "blackListAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1286,
                            "src": "4577:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1302,
                          "name": "_isBlackListUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1009,
                          "src": "4560:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 1304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4560:34:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a20676976656e20626c61636b4c69737441646472657373206973206e6f7420696e20626c61636b6c697374",
                        "id": 1305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4596:56:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04bb66460939ea194d503df110190e52906b18189ab5ed1ca23a15911a5a9a66",
                          "typeString": "literal_string \"ERC20Token: given blackListAddress is not in blacklist\""
                        },
                        "value": "ERC20Token: given blackListAddress is not in blacklist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04bb66460939ea194d503df110190e52906b18189ab5ed1ca23a15911a5a9a66",
                          "typeString": "literal_string \"ERC20Token: given blackListAddress is not in blacklist\""
                        }
                      ],
                      "id": 1301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4552:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4552:101:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1307,
                  "nodeType": "ExpressionStatement",
                  "src": "4552:101:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1309,
                        "name": "blackListAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1286,
                        "src": "4684:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1308,
                      "name": "_removeFromBlackList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 996,
                      "src": "4663:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) returns (bool)"
                      }
                    },
                    "id": 1310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4663:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1311,
                  "nodeType": "ExpressionStatement",
                  "src": "4663:38:7"
                }
              ]
            },
            "documentation": {
              "id": 1284,
              "nodeType": "StructuredDocumentation",
              "src": "4045:287:7",
              "text": " @notice removeFromBlackList is use to remove the blacklisted user.\n @dev This function would remove an address from the blacklist mapping.\n @dev Only the owner can call this function.\n @param blackListAddress The account to be removed from blacklist."
            },
            "functionSelector": "4a49ac4c",
            "id": 1313,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1290,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1289,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "4410:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4410:9:7"
              },
              {
                "id": 1292,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1291,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "4420:13:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4420:13:7"
              }
            ],
            "name": "removeFromBlackList",
            "nameLocation": "4346:19:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1288,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4401:8:7"
            },
            "parameters": {
              "id": 1287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1286,
                  "mutability": "mutable",
                  "name": "blackListAddress",
                  "nameLocation": "4374:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1313,
                  "src": "4366:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4366:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4365:26:7"
            },
            "returnParameters": {
              "id": 1293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4434:0:7"
            },
            "scope": 1376,
            "src": "4337:371:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1436
            ],
            "body": {
              "id": 1337,
              "nodeType": "Block",
              "src": "5023:207:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1323,
                          "name": "tokenPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1045,
                          "src": "5041:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1324,
                          "name": "newTokenPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1316,
                          "src": "5055:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5041:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a206e6577546f6b656e50726963652069732063616e206e6f742062652073616d652061732063757272656e7420746f6b656e50726963652e",
                        "id": 1326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5070:69:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a40529ab6330f2ab371d8f2c5590676b5587bf17188248b6233c4769c4d5b37d",
                          "typeString": "literal_string \"ERC20Token: newTokenPrice is can not be same as current tokenPrice.\""
                        },
                        "value": "ERC20Token: newTokenPrice is can not be same as current tokenPrice."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a40529ab6330f2ab371d8f2c5590676b5587bf17188248b6233c4769c4d5b37d",
                          "typeString": "literal_string \"ERC20Token: newTokenPrice is can not be same as current tokenPrice.\""
                        }
                      ],
                      "id": 1322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5033:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5033:107:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1328,
                  "nodeType": "ExpressionStatement",
                  "src": "5033:107:7"
                },
                {
                  "expression": {
                    "id": 1331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1329,
                      "name": "tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1045,
                      "src": "5150:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1330,
                      "name": "newTokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1316,
                      "src": "5163:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5150:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1332,
                  "nodeType": "ExpressionStatement",
                  "src": "5150:26:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1334,
                        "name": "newTokenPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1316,
                        "src": "5209:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1333,
                      "name": "TokenPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1396,
                      "src": "5191:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5191:32:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1336,
                  "nodeType": "EmitStatement",
                  "src": "5186:37:7"
                }
              ]
            },
            "documentation": {
              "id": 1314,
              "nodeType": "StructuredDocumentation",
              "src": "4714:227:7",
              "text": " @notice updateTokenPrice is use to update the token price\n @param newTokenPrice is updated token price in wei\n @dev Returns the contract balance.\n @dev Only the owner can call this function."
            },
            "functionSelector": "676c0d77",
            "id": 1338,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1320,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1319,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "5013:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5013:9:7"
              }
            ],
            "name": "updateTokenPrice",
            "nameLocation": "4955:16:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1318,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5004:8:7"
            },
            "parameters": {
              "id": 1317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1316,
                  "mutability": "mutable",
                  "name": "newTokenPrice",
                  "nameLocation": "4980:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "4972:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1315,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4972:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4971:23:7"
            },
            "returnParameters": {
              "id": 1321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5023:0:7"
            },
            "scope": 1376,
            "src": "4946:284:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1352,
              "nodeType": "Block",
              "src": "5475:48:7",
              "statements": [
                {
                  "expression": {
                    "id": 1350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1344,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1342,
                      "src": "5485:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1347,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5503:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Token_$1376",
                              "typeString": "contract ERC20Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Token_$1376",
                              "typeString": "contract ERC20Token"
                            }
                          ],
                          "id": 1346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5495:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1345,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5495:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5495:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "5495:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5485:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1351,
                  "nodeType": "ExpressionStatement",
                  "src": "5485:31:7"
                }
              ]
            },
            "documentation": {
              "id": 1339,
              "nodeType": "StructuredDocumentation",
              "src": "5236:166:7",
              "text": " @notice getContractBalance is use to check contract balance\n @dev Returns the contract balance\n @return balance Contract balance in wei"
            },
            "functionSelector": "6f9fb98a",
            "id": 1353,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractBalance",
            "nameLocation": "5416:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5434:2:7"
            },
            "returnParameters": {
              "id": 1343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1342,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "5466:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1353,
                  "src": "5458:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5458:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5457:17:7"
            },
            "scope": 1376,
            "src": "5407:116:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1440
            ],
            "body": {
              "id": 1363,
              "nodeType": "Block",
              "src": "5676:25:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1360,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "5686:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5686:8:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1362,
                  "nodeType": "ExpressionStatement",
                  "src": "5686:8:7"
                }
              ]
            },
            "documentation": {
              "id": 1354,
              "nodeType": "StructuredDocumentation",
              "src": "5529:97:7",
              "text": " @dev to pause the contract.\n @dev Only the owner can call this function."
            },
            "functionSelector": "8456cb59",
            "id": 1364,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1358,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1357,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "5666:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5666:9:7"
              }
            ],
            "name": "pause",
            "nameLocation": "5640:5:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1356,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5657:8:7"
            },
            "parameters": {
              "id": 1355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5645:2:7"
            },
            "returnParameters": {
              "id": 1359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5676:0:7"
            },
            "scope": 1376,
            "src": "5631:70:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1444
            ],
            "body": {
              "id": 1374,
              "nodeType": "Block",
              "src": "5858:27:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1371,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 219,
                      "src": "5868:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5868:10:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1373,
                  "nodeType": "ExpressionStatement",
                  "src": "5868:10:7"
                }
              ]
            },
            "documentation": {
              "id": 1365,
              "nodeType": "StructuredDocumentation",
              "src": "5707:99:7",
              "text": " @dev to unpause the contract.\n @dev Only the owner can call this function."
            },
            "functionSelector": "3f4ba83a",
            "id": 1375,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1369,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1368,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "5848:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5848:9:7"
              }
            ],
            "name": "unpause",
            "nameLocation": "5820:7:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1367,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5839:8:7"
            },
            "parameters": {
              "id": 1366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5827:2:7"
            },
            "returnParameters": {
              "id": 1370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5858:0:7"
            },
            "scope": 1376,
            "src": "5811:74:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1377,
        "src": "436:5451:7",
        "usedErrors": []
      }
    ],
    "src": "39:5849:7"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/ERC20Token.sol",
    "exportedSymbols": {
      "BlackList": [
        1025
      ],
      "Context": [
        931
      ],
      "ERC20": [
        806
      ],
      "ERC20Token": [
        1376
      ],
      "IERC20": [
        884
      ],
      "IERC20Metadata": [
        909
      ],
      "IERC20Token": [
        1445
      ],
      "Ownable": [
        112
      ],
      "Pausable": [
        220
      ]
    },
    "id": 1377,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1027,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 1028,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1377,
        "sourceUnit": 807,
        "src": "215:55:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 1029,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1377,
        "sourceUnit": 221,
        "src": "271:55:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1030,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1377,
        "sourceUnit": 113,
        "src": "327:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/IERC20Token.sol",
        "file": "./IERC20Token.sol",
        "id": 1031,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1377,
        "sourceUnit": 1446,
        "src": "381:27:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/BlackList.sol",
        "file": "./BlackList.sol",
        "id": 1032,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1377,
        "sourceUnit": 1026,
        "src": "409:25:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1033,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 806,
              "src": "459:5:7"
            },
            "id": 1034,
            "nodeType": "InheritanceSpecifier",
            "src": "459:5:7"
          },
          {
            "baseName": {
              "id": 1035,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 220,
              "src": "466:8:7"
            },
            "id": 1036,
            "nodeType": "InheritanceSpecifier",
            "src": "466:8:7"
          },
          {
            "baseName": {
              "id": 1037,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "476:7:7"
            },
            "id": 1038,
            "nodeType": "InheritanceSpecifier",
            "src": "476:7:7"
          },
          {
            "baseName": {
              "id": 1039,
              "name": "IERC20Token",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1445,
              "src": "485:11:7"
            },
            "id": 1040,
            "nodeType": "InheritanceSpecifier",
            "src": "485:11:7"
          },
          {
            "baseName": {
              "id": 1041,
              "name": "BlackList",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1025,
              "src": "498:9:7"
            },
            "id": 1042,
            "nodeType": "InheritanceSpecifier",
            "src": "498:9:7"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1376,
        "linearizedBaseContracts": [
          1376,
          1025,
          1445,
          112,
          220,
          806,
          909,
          884,
          931
        ],
        "name": "ERC20Token",
        "nameLocation": "445:10:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 1043,
              "nodeType": "StructuredDocumentation",
              "src": "518:49:7",
              "text": "   @notice Price of ERC20 Token"
            },
            "functionSelector": "7ff9b596",
            "id": 1045,
            "mutability": "mutable",
            "name": "tokenPrice",
            "nameLocation": "587:10:7",
            "nodeType": "VariableDeclaration",
            "scope": 1376,
            "src": "572:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1044,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "572:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 1046,
              "nodeType": "StructuredDocumentation",
              "src": "604:29:7",
              "text": " Zero Address"
            },
            "id": 1052,
            "mutability": "constant",
            "name": "ZERO_ADDRESS",
            "nameLocation": "656:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 1376,
            "src": "639:42:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1047,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "639:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "30",
                  "id": 1050,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "679:1:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 1049,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "671:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 1048,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "671:7:7",
                  "typeDescriptions": {}
                }
              },
              "id": 1051,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "671:10:7",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1070,
              "nodeType": "Block",
              "src": "1041:41:7",
              "statements": [
                {
                  "expression": {
                    "id": 1068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1066,
                      "name": "tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1045,
                      "src": "1051:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1067,
                      "name": "_tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1059,
                      "src": "1064:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1051:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1069,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:24:7"
                }
              ]
            },
            "documentation": {
              "id": 1053,
              "nodeType": "StructuredDocumentation",
              "src": "688:240:7",
              "text": " @dev Sets the values for {name}, {symbol} and {_tokenPrice}\n @custom:info The default value of {decimals} is 18\n @custom:info name and symbol values are immutable: they can only be set once during construction"
            },
            "id": 1071,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1062,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1055,
                    "src": "1022:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 1063,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1057,
                    "src": "1028:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1064,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1061,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 806,
                  "src": "1016:5:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1016:19:7"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1055,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "959:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1071,
                  "src": "945:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1054,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "945:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1057,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "979:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1071,
                  "src": "965:20:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1056,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1059,
                  "mutability": "mutable",
                  "name": "_tokenPrice",
                  "nameLocation": "994:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1071,
                  "src": "986:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1058,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "986:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "944:62:7"
            },
            "returnParameters": {
              "id": 1065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1041:0:7"
            },
            "scope": 1376,
            "src": "933:149:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1404
            ],
            "body": {
              "id": 1128,
              "nodeType": "Block",
              "src": "1482:414:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1086,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1074,
                          "src": "1500:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1087,
                          "name": "ZERO_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1052,
                          "src": "1506:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1500:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a2043616e6e6f74206d696e74204552433230546f6b656e20746f205a65726f20416464726573732e",
                        "id": 1089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1520:53:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b57838eccd8599dfbbe2178cdb450aec649e33a5486a20878b09db101c6230a5",
                          "typeString": "literal_string \"ERC20Token: Cannot mint ERC20Token to Zero Address.\""
                        },
                        "value": "ERC20Token: Cannot mint ERC20Token to Zero Address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b57838eccd8599dfbbe2178cdb450aec649e33a5486a20878b09db101c6230a5",
                          "typeString": "literal_string \"ERC20Token: Cannot mint ERC20Token to Zero Address.\""
                        }
                      ],
                      "id": 1085,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1492:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1492:82:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1091,
                  "nodeType": "ExpressionStatement",
                  "src": "1492:82:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1592:29:7",
                        "subExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1094,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1610:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1610:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1093,
                            "name": "_isBlackListUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1009,
                            "src": "1593:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) returns (bool)"
                            }
                          },
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1593:28:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a2043616c6c6572206164647265737320697320626c61636b6c69737465642e",
                        "id": 1098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1623:44:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cfef99352760e86c76a1fc4522d10219b9aac9f229b236fa6e44be584cde32e5",
                          "typeString": "literal_string \"ERC20Token: Caller address is blacklisted.\""
                        },
                        "value": "ERC20Token: Caller address is blacklisted."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cfef99352760e86c76a1fc4522d10219b9aac9f229b236fa6e44be584cde32e5",
                          "typeString": "literal_string \"ERC20Token: Caller address is blacklisted.\""
                        }
                      ],
                      "id": 1092,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1584:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1584:84:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1100,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:84:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1102,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1076,
                          "src": "1686:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1696:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1686:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a20416d6f756e742063616e206e6f74206265205a65726f2e",
                        "id": 1105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1699:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7594518c2adef8dbe8aa15243e44996b5dad04116faec001e090d48a91777191",
                          "typeString": "literal_string \"ERC20Token: Amount can not be Zero.\""
                        },
                        "value": "ERC20Token: Amount can not be Zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7594518c2adef8dbe8aa15243e44996b5dad04116faec001e090d48a91777191",
                          "typeString": "literal_string \"ERC20Token: Amount can not be Zero.\""
                        }
                      ],
                      "id": 1101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1678:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1678:59:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1107,
                  "nodeType": "ExpressionStatement",
                  "src": "1678:59:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1109,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1755:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1755:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1111,
                            "name": "tokenPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1045,
                            "src": "1768:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1112,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1076,
                            "src": "1781:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1768:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1755:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a20496e73756666696369656e742062616c616e63652e",
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1788:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f787a0648df480862a8181849fa54fb00c232e114b8288cbe998ffcda0c9f77d",
                          "typeString": "literal_string \"ERC20Token: Insufficient balance.\""
                        },
                        "value": "ERC20Token: Insufficient balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f787a0648df480862a8181849fa54fb00c232e114b8288cbe998ffcda0c9f77d",
                          "typeString": "literal_string \"ERC20Token: Insufficient balance.\""
                        }
                      ],
                      "id": 1108,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1747:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1747:77:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1117,
                  "nodeType": "ExpressionStatement",
                  "src": "1747:77:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1119,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1074,
                        "src": "1840:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1120,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1076,
                        "src": "1844:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1118,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 623,
                      "src": "1834:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1834:17:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1122,
                  "nodeType": "ExpressionStatement",
                  "src": "1834:17:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1124,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1074,
                        "src": "1878:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1125,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1076,
                        "src": "1882:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1123,
                      "name": "ERC20Minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1386,
                      "src": "1866:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1866:23:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1127,
                  "nodeType": "EmitStatement",
                  "src": "1861:28:7"
                }
              ]
            },
            "documentation": {
              "id": 1072,
              "nodeType": "StructuredDocumentation",
              "src": "1088:280:7",
              "text": " @dev This is the mint function. It is used for minting `amount` ERC20 tokens to the `to` address\n @dev Only non-blacklisted user can call this function\n @param to The address to be token minted\n @param amount Number of the ERC20 tokens to be minted"
            },
            "functionSelector": "40c10f19",
            "id": 1129,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1080,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1079,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "1441:13:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1441:13:7"
              },
              {
                "arguments": [
                  {
                    "id": 1082,
                    "name": "to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1074,
                    "src": "1478:2:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1083,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1081,
                  "name": "whenNotBlackListedUser",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1024,
                  "src": "1455:22:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1455:26:7"
              }
            ],
            "name": "mint",
            "nameLocation": "1382:4:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1078,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1432:8:7"
            },
            "parameters": {
              "id": 1077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1074,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1395:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1129,
                  "src": "1387:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1076,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1407:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1129,
                  "src": "1399:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1075,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1386:28:7"
            },
            "returnParameters": {
              "id": 1084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1482:0:7"
            },
            "scope": 1376,
            "src": "1373:523:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1414
            ],
            "body": {
              "id": 1210,
              "nodeType": "Block",
              "src": "2430:401:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1145,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1133,
                            "src": "2448:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 1146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2448:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1147,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1136,
                            "src": "2466:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 1148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2466:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2448:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a20496e636f727265637420706172616d65746572206c656e6774682e",
                        "id": 1150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2481:41:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a144a05822be9f779d4fcf3ca1c70749eeb283966c5c3e4740758598fce48f2",
                          "typeString": "literal_string \"ERC20Token: Incorrect parameter length.\""
                        },
                        "value": "ERC20Token: Incorrect parameter length."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a144a05822be9f779d4fcf3ca1c70749eeb283966c5c3e4740758598fce48f2",
                          "typeString": "literal_string \"ERC20Token: Incorrect parameter length.\""
                        }
                      ],
                      "id": 1144,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2440:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2440:83:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1152,
                  "nodeType": "ExpressionStatement",
                  "src": "2440:83:7"
                },
                {
                  "body": {
                    "id": 1208,
                    "nodeType": "Block",
                    "src": "2575:250:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "id": 1169,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "!",
                                  "prefix": true,
                                  "src": "2594:29:7",
                                  "subExpression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 1165,
                                          "name": "account",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1133,
                                          "src": "2612:7:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                            "typeString": "address[] calldata"
                                          }
                                        },
                                        "id": 1167,
                                        "indexExpression": {
                                          "id": 1166,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1154,
                                          "src": "2620:1:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2612:10:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1164,
                                      "name": "_isBlackListUser",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1009,
                                      "src": "2595:16:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                                        "typeString": "function (address) returns (bool)"
                                      }
                                    },
                                    "id": 1168,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2595:28:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 1170,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2593:31:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 1178,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 1173,
                                          "name": "account",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1133,
                                          "src": "2637:7:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                            "typeString": "address[] calldata"
                                          }
                                        },
                                        "id": 1175,
                                        "indexExpression": {
                                          "id": 1174,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1154,
                                          "src": "2645:1:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2637:10:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1172,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2629:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1171,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2629:7:7",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1176,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2629:19:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "id": 1177,
                                    "name": "ZERO_ADDRESS",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1052,
                                    "src": "2652:12:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "2629:35:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 1179,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2628:37:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "2593:72:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1185,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1181,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1136,
                                    "src": "2670:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1183,
                                  "indexExpression": {
                                    "id": 1182,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1154,
                                    "src": "2677:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2670:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1184,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2683:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "2670:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 1186,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2669:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2593:92:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1207,
                        "nodeType": "IfStatement",
                        "src": "2589:216:7",
                        "trueBody": {
                          "id": 1206,
                          "nodeType": "Block",
                          "src": "2687:118:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1189,
                                      "name": "account",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1133,
                                      "src": "2711:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 1191,
                                    "indexExpression": {
                                      "id": 1190,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1154,
                                      "src": "2719:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2711:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1192,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1136,
                                      "src": "2723:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 1194,
                                    "indexExpression": {
                                      "id": 1193,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1154,
                                      "src": "2730:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2723:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1188,
                                  "name": "_mint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 623,
                                  "src": "2705:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 1195,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2705:28:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1196,
                              "nodeType": "ExpressionStatement",
                              "src": "2705:28:7"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1198,
                                      "name": "account",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1133,
                                      "src": "2768:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 1200,
                                    "indexExpression": {
                                      "id": 1199,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1154,
                                      "src": "2776:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2768:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1201,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1136,
                                      "src": "2780:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 1203,
                                    "indexExpression": {
                                      "id": 1202,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1154,
                                      "src": "2787:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2780:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1197,
                                  "name": "ERC20Minted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1386,
                                  "src": "2756:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 1204,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2756:34:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1205,
                              "nodeType": "EmitStatement",
                              "src": "2751:39:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1157,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1154,
                      "src": "2551:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1158,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1133,
                        "src": "2555:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 1159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2555:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2551:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1209,
                  "initializationExpression": {
                    "assignments": [
                      1154
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1154,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2544:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1209,
                        "src": "2537:8:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 1153,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "2537:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1156,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2548:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2537:12:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2571:3:7",
                      "subExpression": {
                        "id": 1161,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1154,
                        "src": "2571:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 1163,
                    "nodeType": "ExpressionStatement",
                    "src": "2571:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "2533:292:7"
                }
              ]
            },
            "documentation": {
              "id": 1130,
              "nodeType": "StructuredDocumentation",
              "src": "1902:410:7",
              "text": " @notice airDrop is use to put the ERC20 tokens to given addresses\n @dev This is the airDrop function. It is used by the owner to airdrop `amount` number of ERC20 tokens to the `account` address respectively.\n @dev Only the owner can call this function\n @param account The addresses to be airdropped\n @param amount The amounts of random tokens to be air dropped respectively"
            },
            "functionSelector": "65216a41",
            "id": 1211,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1140,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1139,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "2406:13:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2406:13:7"
              },
              {
                "id": 1142,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1141,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "2420:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2420:9:7"
              }
            ],
            "name": "airDrop",
            "nameLocation": "2327:7:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1138,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2397:8:7"
            },
            "parameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1133,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2354:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1211,
                  "src": "2335:26:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1131,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2335:7:7",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1132,
                    "nodeType": "ArrayTypeName",
                    "src": "2335:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1136,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2380:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1211,
                  "src": "2363:23:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1134,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2363:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1135,
                    "nodeType": "ArrayTypeName",
                    "src": "2363:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2334:53:7"
            },
            "returnParameters": {
              "id": 1143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2430:0:7"
            },
            "scope": 1376,
            "src": "2318:513:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1418
            ],
            "body": {
              "id": 1251,
              "nodeType": "Block",
              "src": "3121:270:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1219,
                            "name": "getContractBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1353,
                            "src": "3139:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3139:20:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3162:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3139:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a20496e73756666696369656e742062616c616e6365",
                        "id": 1223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3165:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d996262e27ec4299be34f8d22baa37bd148c95e193553c255fd0834e07b3b928",
                          "typeString": "literal_string \"ERC20Token: Insufficient balance\""
                        },
                        "value": "ERC20Token: Insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d996262e27ec4299be34f8d22baa37bd148c95e193553c255fd0834e07b3b928",
                          "typeString": "literal_string \"ERC20Token: Insufficient balance\""
                        }
                      ],
                      "id": 1218,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3131:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3131:69:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1225,
                  "nodeType": "ExpressionStatement",
                  "src": "3131:69:7"
                },
                {
                  "assignments": [
                    1227
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1227,
                      "mutability": "mutable",
                      "name": "_to",
                      "nameLocation": "3226:3:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1251,
                      "src": "3210:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1226,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3210:15:7",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1233,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1230,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3240:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3240:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3232:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 1228,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3232:8:7",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3232:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3210:41:7"
                },
                {
                  "assignments": [
                    1235
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1235,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "3266:4:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1251,
                      "src": "3261:9:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1234,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3261:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1241,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1238,
                          "name": "getContractBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1353,
                          "src": "3282:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3282:20:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1236,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1227,
                        "src": "3273:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "send",
                      "nodeType": "MemberAccess",
                      "src": "3273:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 1240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3273:30:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3261:42:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1243,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1235,
                        "src": "3321:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 1244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3327:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 1242,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3313:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3313:37:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1246,
                  "nodeType": "ExpressionStatement",
                  "src": "3313:37:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1248,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1227,
                        "src": "3380:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 1247,
                      "name": "EthersWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1391,
                      "src": "3365:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3365:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1250,
                  "nodeType": "EmitStatement",
                  "src": "3360:24:7"
                }
              ]
            },
            "documentation": {
              "id": 1212,
              "nodeType": "StructuredDocumentation",
              "src": "2837:231:7",
              "text": " @notice withdraw is use to take out all the contract balance into owner account\n @dev This function would withdraw all the contract balance into owner's address\n @dev Only the owner can call this function"
            },
            "functionSelector": "3ccfd60b",
            "id": 1252,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1216,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1215,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "3111:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3111:9:7"
              }
            ],
            "name": "withdraw",
            "nameLocation": "3082:8:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1214,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3102:8:7"
            },
            "parameters": {
              "id": 1213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3090:2:7"
            },
            "returnParameters": {
              "id": 1217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3121:0:7"
            },
            "scope": 1376,
            "src": "3073:318:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1424
            ],
            "body": {
              "id": 1282,
              "nodeType": "Block",
              "src": "3761:278:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1264,
                          "name": "blackListAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1255,
                          "src": "3779:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1265,
                          "name": "ZERO_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1052,
                          "src": "3799:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3779:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a20626c61636b4c697374416464726573732063616e206e6f74206265205a65726f20416464726573732e",
                        "id": 1267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3813:55:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1059aca452045852e0556aeb5bc8fed5168c6a51683af6a476ea395e51c7486",
                          "typeString": "literal_string \"ERC20Token: blackListAddress can not be Zero Address.\""
                        },
                        "value": "ERC20Token: blackListAddress can not be Zero Address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1059aca452045852e0556aeb5bc8fed5168c6a51683af6a476ea395e51c7486",
                          "typeString": "literal_string \"ERC20Token: blackListAddress can not be Zero Address.\""
                        }
                      ],
                      "id": 1263,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3771:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3771:98:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1269,
                  "nodeType": "ExpressionStatement",
                  "src": "3771:98:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3887:35:7",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 1272,
                              "name": "blackListAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1255,
                              "src": "3905:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1271,
                            "name": "_isBlackListUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1009,
                            "src": "3888:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) returns (bool)"
                            }
                          },
                          "id": 1273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3888:34:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a20676976656e20626c61636b4c6973744164647265737320697320616c726561647920626c61636b6c6973746564",
                        "id": 1275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3924:59:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b7905bbeb56fcea347de262147601586ae74c0c2eddae91ccbea0fa9259d1e1",
                          "typeString": "literal_string \"ERC20Token: given blackListAddress is already blacklisted\""
                        },
                        "value": "ERC20Token: given blackListAddress is already blacklisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9b7905bbeb56fcea347de262147601586ae74c0c2eddae91ccbea0fa9259d1e1",
                          "typeString": "literal_string \"ERC20Token: given blackListAddress is already blacklisted\""
                        }
                      ],
                      "id": 1270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3879:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3879:105:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1277,
                  "nodeType": "ExpressionStatement",
                  "src": "3879:105:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1279,
                        "name": "blackListAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1255,
                        "src": "4010:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1278,
                      "name": "_addToBlackList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 970,
                      "src": "3994:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) returns (bool)"
                      }
                    },
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3994:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1281,
                  "nodeType": "ExpressionStatement",
                  "src": "3994:33:7"
                }
              ]
            },
            "documentation": {
              "id": 1253,
              "nodeType": "StructuredDocumentation",
              "src": "3397:267:7",
              "text": " @notice addToBlackList is use to add the address into blacklist\n @dev This function would add an address to the blacklist mapping\n @dev Only the owner can call this function\n @param blackListAddress The account to be added to blacklist"
            },
            "functionSelector": "417c73a7",
            "id": 1283,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1259,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1258,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "3737:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3737:9:7"
              },
              {
                "id": 1261,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1260,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "3747:13:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3747:13:7"
              }
            ],
            "name": "addToBlackList",
            "nameLocation": "3678:14:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1257,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3728:8:7"
            },
            "parameters": {
              "id": 1256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1255,
                  "mutability": "mutable",
                  "name": "blackListAddress",
                  "nameLocation": "3701:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1283,
                  "src": "3693:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3693:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3692:26:7"
            },
            "returnParameters": {
              "id": 1262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3761:0:7"
            },
            "scope": 1376,
            "src": "3669:370:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1430
            ],
            "body": {
              "id": 1312,
              "nodeType": "Block",
              "src": "4434:274:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1295,
                          "name": "blackListAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1286,
                          "src": "4452:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1296,
                          "name": "ZERO_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1052,
                          "src": "4472:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4452:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a20626c61636b4c697374416464726573732063616e206e6f74206265205a65726f20416464726573732e",
                        "id": 1298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4486:55:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1059aca452045852e0556aeb5bc8fed5168c6a51683af6a476ea395e51c7486",
                          "typeString": "literal_string \"ERC20Token: blackListAddress can not be Zero Address.\""
                        },
                        "value": "ERC20Token: blackListAddress can not be Zero Address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1059aca452045852e0556aeb5bc8fed5168c6a51683af6a476ea395e51c7486",
                          "typeString": "literal_string \"ERC20Token: blackListAddress can not be Zero Address.\""
                        }
                      ],
                      "id": 1294,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4444:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4444:98:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1300,
                  "nodeType": "ExpressionStatement",
                  "src": "4444:98:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1303,
                            "name": "blackListAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1286,
                            "src": "4577:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1302,
                          "name": "_isBlackListUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1009,
                          "src": "4560:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 1304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4560:34:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a20676976656e20626c61636b4c69737441646472657373206973206e6f7420696e20626c61636b6c697374",
                        "id": 1305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4596:56:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04bb66460939ea194d503df110190e52906b18189ab5ed1ca23a15911a5a9a66",
                          "typeString": "literal_string \"ERC20Token: given blackListAddress is not in blacklist\""
                        },
                        "value": "ERC20Token: given blackListAddress is not in blacklist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04bb66460939ea194d503df110190e52906b18189ab5ed1ca23a15911a5a9a66",
                          "typeString": "literal_string \"ERC20Token: given blackListAddress is not in blacklist\""
                        }
                      ],
                      "id": 1301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4552:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4552:101:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1307,
                  "nodeType": "ExpressionStatement",
                  "src": "4552:101:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1309,
                        "name": "blackListAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1286,
                        "src": "4684:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1308,
                      "name": "_removeFromBlackList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 996,
                      "src": "4663:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) returns (bool)"
                      }
                    },
                    "id": 1310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4663:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1311,
                  "nodeType": "ExpressionStatement",
                  "src": "4663:38:7"
                }
              ]
            },
            "documentation": {
              "id": 1284,
              "nodeType": "StructuredDocumentation",
              "src": "4045:287:7",
              "text": " @notice removeFromBlackList is use to remove the blacklisted user.\n @dev This function would remove an address from the blacklist mapping.\n @dev Only the owner can call this function.\n @param blackListAddress The account to be removed from blacklist."
            },
            "functionSelector": "4a49ac4c",
            "id": 1313,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1290,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1289,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "4410:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4410:9:7"
              },
              {
                "id": 1292,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1291,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "4420:13:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4420:13:7"
              }
            ],
            "name": "removeFromBlackList",
            "nameLocation": "4346:19:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1288,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4401:8:7"
            },
            "parameters": {
              "id": 1287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1286,
                  "mutability": "mutable",
                  "name": "blackListAddress",
                  "nameLocation": "4374:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1313,
                  "src": "4366:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4366:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4365:26:7"
            },
            "returnParameters": {
              "id": 1293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4434:0:7"
            },
            "scope": 1376,
            "src": "4337:371:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1436
            ],
            "body": {
              "id": 1337,
              "nodeType": "Block",
              "src": "5023:207:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1323,
                          "name": "tokenPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1045,
                          "src": "5041:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1324,
                          "name": "newTokenPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1316,
                          "src": "5055:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5041:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433230546f6b656e3a206e6577546f6b656e50726963652069732063616e206e6f742062652073616d652061732063757272656e7420746f6b656e50726963652e",
                        "id": 1326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5070:69:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a40529ab6330f2ab371d8f2c5590676b5587bf17188248b6233c4769c4d5b37d",
                          "typeString": "literal_string \"ERC20Token: newTokenPrice is can not be same as current tokenPrice.\""
                        },
                        "value": "ERC20Token: newTokenPrice is can not be same as current tokenPrice."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a40529ab6330f2ab371d8f2c5590676b5587bf17188248b6233c4769c4d5b37d",
                          "typeString": "literal_string \"ERC20Token: newTokenPrice is can not be same as current tokenPrice.\""
                        }
                      ],
                      "id": 1322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5033:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5033:107:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1328,
                  "nodeType": "ExpressionStatement",
                  "src": "5033:107:7"
                },
                {
                  "expression": {
                    "id": 1331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1329,
                      "name": "tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1045,
                      "src": "5150:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1330,
                      "name": "newTokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1316,
                      "src": "5163:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5150:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1332,
                  "nodeType": "ExpressionStatement",
                  "src": "5150:26:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1334,
                        "name": "newTokenPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1316,
                        "src": "5209:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1333,
                      "name": "TokenPriceUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1396,
                      "src": "5191:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5191:32:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1336,
                  "nodeType": "EmitStatement",
                  "src": "5186:37:7"
                }
              ]
            },
            "documentation": {
              "id": 1314,
              "nodeType": "StructuredDocumentation",
              "src": "4714:227:7",
              "text": " @notice updateTokenPrice is use to update the token price\n @param newTokenPrice is updated token price in wei\n @dev Returns the contract balance.\n @dev Only the owner can call this function."
            },
            "functionSelector": "676c0d77",
            "id": 1338,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1320,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1319,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "5013:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5013:9:7"
              }
            ],
            "name": "updateTokenPrice",
            "nameLocation": "4955:16:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1318,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5004:8:7"
            },
            "parameters": {
              "id": 1317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1316,
                  "mutability": "mutable",
                  "name": "newTokenPrice",
                  "nameLocation": "4980:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "4972:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1315,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4972:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4971:23:7"
            },
            "returnParameters": {
              "id": 1321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5023:0:7"
            },
            "scope": 1376,
            "src": "4946:284:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1352,
              "nodeType": "Block",
              "src": "5475:48:7",
              "statements": [
                {
                  "expression": {
                    "id": 1350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1344,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1342,
                      "src": "5485:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1347,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5503:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Token_$1376",
                              "typeString": "contract ERC20Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Token_$1376",
                              "typeString": "contract ERC20Token"
                            }
                          ],
                          "id": 1346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5495:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1345,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5495:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5495:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "5495:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5485:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1351,
                  "nodeType": "ExpressionStatement",
                  "src": "5485:31:7"
                }
              ]
            },
            "documentation": {
              "id": 1339,
              "nodeType": "StructuredDocumentation",
              "src": "5236:166:7",
              "text": " @notice getContractBalance is use to check contract balance\n @dev Returns the contract balance\n @return balance Contract balance in wei"
            },
            "functionSelector": "6f9fb98a",
            "id": 1353,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractBalance",
            "nameLocation": "5416:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5434:2:7"
            },
            "returnParameters": {
              "id": 1343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1342,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "5466:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1353,
                  "src": "5458:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5458:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5457:17:7"
            },
            "scope": 1376,
            "src": "5407:116:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1440
            ],
            "body": {
              "id": 1363,
              "nodeType": "Block",
              "src": "5676:25:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1360,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "5686:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5686:8:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1362,
                  "nodeType": "ExpressionStatement",
                  "src": "5686:8:7"
                }
              ]
            },
            "documentation": {
              "id": 1354,
              "nodeType": "StructuredDocumentation",
              "src": "5529:97:7",
              "text": " @dev to pause the contract.\n @dev Only the owner can call this function."
            },
            "functionSelector": "8456cb59",
            "id": 1364,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1358,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1357,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "5666:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5666:9:7"
              }
            ],
            "name": "pause",
            "nameLocation": "5640:5:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1356,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5657:8:7"
            },
            "parameters": {
              "id": 1355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5645:2:7"
            },
            "returnParameters": {
              "id": 1359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5676:0:7"
            },
            "scope": 1376,
            "src": "5631:70:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1444
            ],
            "body": {
              "id": 1374,
              "nodeType": "Block",
              "src": "5858:27:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1371,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 219,
                      "src": "5868:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5868:10:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1373,
                  "nodeType": "ExpressionStatement",
                  "src": "5868:10:7"
                }
              ]
            },
            "documentation": {
              "id": 1365,
              "nodeType": "StructuredDocumentation",
              "src": "5707:99:7",
              "text": " @dev to unpause the contract.\n @dev Only the owner can call this function."
            },
            "functionSelector": "3f4ba83a",
            "id": 1375,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1369,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1368,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "5848:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5848:9:7"
              }
            ],
            "name": "unpause",
            "nameLocation": "5820:7:7",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1367,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5839:8:7"
            },
            "parameters": {
              "id": 1366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5827:2:7"
            },
            "returnParameters": {
              "id": 1370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5858:0:7"
            },
            "scope": 1376,
            "src": "5811:74:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1377,
        "src": "436:5451:7",
        "usedErrors": []
      }
    ],
    "src": "39:5849:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {
    "5": {
      "events": {},
      "links": {},
      "address": "0x2B27EDC732603AF9b75B5c3c1633faF4C9904811",
      "transactionHash": "0x9aba4528b7f3ce37833cf8369f9c799f314607cc5102a135333d914a41ccd1fe"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x535915Eb96ab639aCcbBc27A8c18A39EDC588B7b",
      "transactionHash": "0xa15b764e3c4ccc98868d9a5533b243d64ea62708324c0c6298a2a9aaa1e0b5c4"
    },
    "80001": {
      "events": {},
      "links": {},
      "address": "0xbf2AbEC8332E49DDE1Fc4c6D4222Eb8282A7D891",
      "transactionHash": "0xfeef0959da5ec2c06da80a2b51cd546c9e8a4d3226969b494f146b36e66c7690"
    },
    "1665568236003": {
      "events": {},
      "links": {},
      "address": "0xCfEB869F69431e42cdB54A4F4f105C19C080A601",
      "transactionHash": "0xb575b5c7aaed22b6ead451182f22c48aab281d8b90621fcaa0d91b5741d62c49"
    },
    "1665643386350": {
      "events": {},
      "links": {},
      "address": "0xacB3075E4a4D73975ADe7bFb0ee073f9A65B9e71",
      "transactionHash": "0x522800cb0265ff24b132ef5927ad4e56c2c8de7188a332c0367ebf6e93d68bf2"
    },
    "1665731178884": {
      "events": {},
      "links": {},
      "address": "0x9d9e61e382228Efb6485d966Ee9B86068C3A21E0",
      "transactionHash": "0xf16d68ea05d9d651ec2895e3c35aef0a91e63eaf799521d70f2894fc88fea873"
    },
    "1668149886439": {
      "events": {},
      "links": {},
      "address": "0x0d1f88F88345563a937d1fb476624d0d41070413",
      "transactionHash": "0xf0473f403ff5afe89fe75fbb0eb0d91806deadeefbeff68e4f75c39771684412"
    },
    "1668164512560": {
      "events": {},
      "links": {},
      "address": "0x304F8118F20Bd7b615A6f2BEC8f30eef3387f44a",
      "transactionHash": "0x77b33e1731e7e18d6f840f6a4be421338658ce853d083178ec9e36d7d44e8177"
    }
  },
  "schemaVersion": "3.4.5",
  "updatedAt": "2022-11-11T11:02:04.486Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addToBlackList(address)": {
        "details": "This function would add an address to the blacklist mappingOnly the owner can call this function",
        "params": {
          "blackListAddress": "The account to be added to blacklist"
        }
      },
      "airDrop(address[],uint256[])": {
        "details": "This is the airDrop function. It is used by the owner to airdrop `amount` number of ERC20 tokens to the `account` address respectively.Only the owner can call this function",
        "params": {
          "account": "The addresses to be airdropped",
          "amount": "The amounts of random tokens to be air dropped respectively"
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "custom:info": "The default value of {decimals} is 18name and symbol values are immutable: they can only be set once during construction",
        "details": "Sets the values for {name}, {symbol} and {_tokenPrice}"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getContractBalance()": {
        "details": "Returns the contract balance",
        "returns": {
          "balance": "Contract balance in wei"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "This is the mint function. It is used for minting `amount` ERC20 tokens to the `to` addressOnly non-blacklisted user can call this function",
        "params": {
          "amount": "Number of the ERC20 tokens to be minted",
          "to": "The address to be token minted"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "details": "to pause the contract.Only the owner can call this function."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "removeFromBlackList(address)": {
        "details": "This function would remove an address from the blacklist mapping.Only the owner can call this function.",
        "params": {
          "blackListAddress": "The account to be removed from blacklist."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "details": "to unpause the contract.Only the owner can call this function."
      },
      "updateTokenPrice(uint256)": {
        "details": "Returns the contract balance.Only the owner can call this function.",
        "params": {
          "newTokenPrice": "is updated token price in wei"
        }
      },
      "withdraw()": {
        "details": "This function would withdraw all the contract balance into owner's addressOnly the owner can call this function"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addToBlackList(address)": {
        "notice": "addToBlackList is use to add the address into blacklist"
      },
      "airDrop(address[],uint256[])": {
        "notice": "airDrop is use to put the ERC20 tokens to given addresses"
      },
      "getContractBalance()": {
        "notice": "getContractBalance is use to check contract balance"
      },
      "removeFromBlackList(address)": {
        "notice": "removeFromBlackList is use to remove the blacklisted user."
      },
      "tokenPrice()": {
        "notice": "Price of ERC20 Token"
      },
      "updateTokenPrice(uint256)": {
        "notice": "updateTokenPrice is use to update the token price"
      },
      "withdraw()": {
        "notice": "withdraw is use to take out all the contract balance into owner account"
      }
    },
    "version": 1
  }
}